//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 accumBufferAdd[1];
.global .align 1 .b8 accumBufferLerp[1];
.global .align 1 .b8 GBufferPos[1];
.global .align 1 .b8 GBufferNormal[1];
.global .align 1 .b8 GBufferAtten[1];
.global .align 1 .b8 colorOutput[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 1 .b8 globalLights[1];
.global .align 1 .b8 localLights[1];
.global .align 1 .b8 localLightIndices[1];
.global .align 4 .u32 tileCubemap;
.global .align 4 .b8 cameraRht[12];
.global .align 4 .b8 cameraUp[12];
.global .align 4 .b8 cameraFwd[12];
.global .align 4 .b8 cameraPos[12];
.global .align 4 .f32 cameraFov;
.global .align 4 .f32 cameraExp;
.global .align 4 .f32 integration;
.global .align 4 .u32 finalBounceFlag;
.global .align 4 .u32 bounceFlag;
.global .align 16 .b8 rndOffset[16];
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11tileCubemapE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9cameraRhtE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8cameraUpE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9cameraFwdE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9cameraPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9cameraFovE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9cameraExpE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11integrationE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15finalBounceFlagE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10bounceFlagE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9rndOffsetE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename11tileCubemapE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9cameraRhtE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8cameraUpE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9cameraFwdE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9cameraPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9cameraFovE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9cameraExpE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11integrationE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename15finalBounceFlagE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename10bounceFlagE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9rndOffsetE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11tileCubemapE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9cameraRhtE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8cameraUpE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9cameraFwdE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9cameraPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9cameraFovE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9cameraExpE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11integrationE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15finalBounceFlagE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10bounceFlagE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9rndOffsetE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11tileCubemapE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9cameraRhtE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8cameraUpE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9cameraFwdE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9cameraPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9cameraFovE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9cameraExpE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11integrationE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic15finalBounceFlagE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10bounceFlagE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9rndOffsetE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11tileCubemapE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9cameraRhtE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8cameraUpE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9cameraFwdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9cameraPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9cameraFovE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9cameraExpE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11integrationE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15finalBounceFlagE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10bounceFlagE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9rndOffsetE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[60];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<182>;
	.reg .b16 	%rs<11>;
	.reg .f32 	%f<1403>;
	.reg .b32 	%r<765>;
	.reg .b64 	%rd<243>;


	mov.u64 	%rd242, __local_depot0;
	cvta.local.u64 	%SP, %rd242;
	ld.global.v2.u32 	{%r226, %r227}, [pixelID];
	ld.global.v4.u32 	{%r229, %r230, %r231, %r232}, [rndOffset];
	add.s32 	%r234, %r229, %r226;
	and.b32  	%r235, %r234, 255;
	add.s32 	%r238, %r230, %r227;
	and.b32  	%r239, %r238, 255;
	add.s32 	%r241, %r231, %r226;
	and.b32  	%r242, %r241, 255;
	add.s32 	%r244, %r232, %r227;
	and.b32  	%r245, %r244, 255;
	cvt.u64.u32	%rd57, %r235;
	cvt.u64.u32	%rd58, %r239;
	mov.u64 	%rd73, rnd_seeds;
	cvta.global.u64 	%rd44, %rd73;
	mov.u32 	%r224, 2;
	mov.u32 	%r225, 3;
	mov.u64 	%rd235, 0;
	// inline asm
	call (%rd43), _rt_buffer_get_64, (%rd44, %r224, %r225, %rd57, %rd58, %rd235, %rd235);
	// inline asm
	ld.u8 	%rs2, [%rd43];
	cvt.rn.f32.u16	%f386, %rs2;
	div.rn.f32 	%f1, %f386, 0f437F0000;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd44, %r224, %r225, %rd57, %rd58, %rd235, %rd235);
	// inline asm
	ld.u8 	%rs3, [%rd49+1];
	cvt.rn.f32.u16	%f387, %rs3;
	div.rn.f32 	%f2, %f387, 0f437F0000;
	// inline asm
	call (%rd55), _rt_buffer_get_64, (%rd44, %r224, %r225, %rd57, %rd58, %rd235, %rd235);
	// inline asm
	ld.u8 	%rs4, [%rd55+2];
	cvt.rn.f32.u16	%f388, %rs4;
	div.rn.f32 	%f3, %f388, 0f437F0000;
	cvt.u64.u32	%rd69, %r242;
	cvt.u64.u32	%rd70, %r245;
	// inline asm
	call (%rd61), _rt_buffer_get_64, (%rd44, %r224, %r225, %rd69, %rd70, %rd235, %rd235);
	// inline asm
	ld.u8 	%rs1, [%rd61];
	// inline asm
	call (%rd67), _rt_buffer_get_64, (%rd44, %r224, %r225, %rd69, %rd70, %rd235, %rd235);
	// inline asm
	ld.global.u32 	%r246, [bounceFlag];
	setp.eq.s32	%p6, %r246, 0;
	@%p6 bra 	BB0_48;

	ld.u8 	%rs5, [%rd67+1];
	cvt.rn.f32.u16	%f389, %rs5;
	div.rn.f32 	%f390, %f389, 0f437F0000;
	cvt.rn.f32.u16	%f391, %rs1;
	div.rn.f32 	%f392, %f391, 0f437F0000;
	ld.global.v2.u32 	{%r251, %r252}, [pixelID];
	cvt.u64.u32	%rd76, %r251;
	cvt.u64.u32	%rd77, %r252;
	mov.u64 	%rd86, GBufferPos;
	cvta.global.u64 	%rd75, %rd86;
	mov.u32 	%r250, 12;
	// inline asm
	call (%rd74), _rt_buffer_get_64, (%rd75, %r224, %r250, %rd76, %rd77, %rd235, %rd235);
	// inline asm
	ld.f32 	%f1324, [%rd74+8];
	ld.f32 	%f1323, [%rd74+4];
	ld.f32 	%f1322, [%rd74];
	ld.global.v2.u32 	{%r255, %r256}, [pixelID];
	cvt.u64.u32	%rd82, %r255;
	cvt.u64.u32	%rd83, %r256;
	mov.u64 	%rd87, GBufferNormal;
	cvta.global.u64 	%rd81, %rd87;
	// inline asm
	call (%rd80), _rt_buffer_get_64, (%rd81, %r224, %r250, %rd82, %rd83, %rd235, %rd235);
	// inline asm
	ld.f32 	%f9, [%rd80+4];
	ld.f32 	%f8, [%rd80+8];
	ld.f32 	%f7, [%rd80];
	abs.f32 	%f393, %f7;
	abs.f32 	%f394, %f8;
	setp.gt.f32	%p7, %f393, %f394;
	neg.f32 	%f395, %f9;
	neg.f32 	%f396, %f8;
	selp.f32	%f397, %f395, 0f00000000, %p7;
	selp.f32	%f398, %f7, %f396, %p7;
	selp.f32	%f399, 0f00000000, %f9, %p7;
	mul.f32 	%f400, %f398, %f398;
	fma.rn.f32 	%f401, %f397, %f397, %f400;
	fma.rn.f32 	%f402, %f399, %f399, %f401;
	sqrt.rn.f32 	%f403, %f402;
	rcp.rn.f32 	%f404, %f403;
	mul.f32 	%f10, %f397, %f404;
	mul.f32 	%f11, %f398, %f404;
	mul.f32 	%f12, %f399, %f404;
	sqrt.rn.f32 	%f13, %f392;
	mul.f32 	%f1313, %f390, 0f40C90FDB;
	add.u64 	%rd88, %SP, 32;
	cvta.to.local.u64 	%rd2, %rd88;
	abs.f32 	%f15, %f1313;
	setp.neu.f32	%p8, %f15, 0f7F800000;
	mov.f32 	%f1307, %f1313;
	@%p8 bra 	BB0_3;

	mov.f32 	%f405, 0f00000000;
	mul.rn.f32 	%f1307, %f1313, %f405;

BB0_3:
	mul.f32 	%f406, %f1307, 0f3F22F983;
	cvt.rni.s32.f32	%r714, %f406;
	cvt.rn.f32.s32	%f407, %r714;
	neg.f32 	%f408, %f407;
	mov.f32 	%f409, 0f3FC90FDA;
	fma.rn.f32 	%f410, %f408, %f409, %f1307;
	mov.f32 	%f411, 0f33A22168;
	fma.rn.f32 	%f412, %f408, %f411, %f410;
	mov.f32 	%f413, 0f27C234C5;
	fma.rn.f32 	%f1308, %f408, %f413, %f412;
	abs.f32 	%f414, %f1307;
	add.s64 	%rd3, %rd2, 24;
	setp.leu.f32	%p9, %f414, 0f47CE4780;
	@%p9 bra 	BB0_14;

	mov.b32 	 %r2, %f1307;
	shr.u32 	%r3, %r2, 23;
	shl.b32 	%r261, %r2, 8;
	or.b32  	%r4, %r261, -2147483648;
	mov.u32 	%r706, 0;
	mov.u64 	%rd230, __cudart_i2opi_f;
	mov.u32 	%r705, -6;
	mov.u64 	%rd231, %rd2;

BB0_5:
	.pragma "nounroll";
	ld.const.u32 	%r264, [%rd230];
	// inline asm
	{
	mad.lo.cc.u32   %r262, %r264, %r4, %r706;
	madc.hi.u32     %r706, %r264, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd231], %r262;
	add.s64 	%rd231, %rd231, 4;
	add.s64 	%rd230, %rd230, 4;
	add.s32 	%r705, %r705, 1;
	setp.ne.s32	%p10, %r705, 0;
	@%p10 bra 	BB0_5;

	and.b32  	%r267, %r3, 255;
	add.s32 	%r268, %r267, -128;
	shr.u32 	%r269, %r268, 5;
	and.b32  	%r9, %r2, -2147483648;
	st.local.u32 	[%rd3], %r706;
	mov.u32 	%r270, 6;
	sub.s32 	%r271, %r270, %r269;
	mul.wide.s32 	%rd90, %r271, 4;
	add.s64 	%rd8, %rd2, %rd90;
	ld.local.u32 	%r707, [%rd8];
	ld.local.u32 	%r708, [%rd8+-4];
	and.b32  	%r12, %r3, 31;
	setp.eq.s32	%p11, %r12, 0;
	@%p11 bra 	BB0_8;

	mov.u32 	%r272, 32;
	sub.s32 	%r273, %r272, %r12;
	shr.u32 	%r274, %r708, %r273;
	shl.b32 	%r275, %r707, %r12;
	add.s32 	%r707, %r274, %r275;
	ld.local.u32 	%r276, [%rd8+-8];
	shr.u32 	%r277, %r276, %r273;
	shl.b32 	%r278, %r708, %r12;
	add.s32 	%r708, %r277, %r278;

BB0_8:
	shr.u32 	%r279, %r708, 30;
	shl.b32 	%r280, %r707, 2;
	add.s32 	%r709, %r279, %r280;
	shl.b32 	%r18, %r708, 2;
	shr.u32 	%r281, %r709, 31;
	shr.u32 	%r282, %r707, 30;
	add.s32 	%r19, %r281, %r282;
	setp.eq.s32	%p12, %r281, 0;
	@%p12 bra 	BB0_9;

	not.b32 	%r283, %r709;
	neg.s32 	%r711, %r18;
	setp.eq.s32	%p13, %r18, 0;
	selp.u32	%r284, 1, 0, %p13;
	add.s32 	%r709, %r284, %r283;
	xor.b32  	%r710, %r9, -2147483648;
	bra.uni 	BB0_11;

BB0_48:
	ld.global.f32 	%f1322, [cameraPos];
	ld.global.f32 	%f1323, [cameraPos+4];
	ld.global.f32 	%f1324, [cameraPos+8];
	ld.global.v2.u32 	{%r351, %r352}, [resolution];
	cvt.rn.f32.u32	%f476, %r351;
	cvt.rn.f32.u32	%f477, %r352;
	div.rn.f32 	%f478, %f476, %f477;
	ld.global.v2.u32 	{%r355, %r356}, [pixelID];
	cvt.rn.f32.u32	%f479, %r355;
	add.f32 	%f480, %f1, %f479;
	div.rn.f32 	%f481, %f480, %f476;
	cvt.rn.f32.u32	%f482, %r356;
	add.f32 	%f483, %f2, %f482;
	div.rn.f32 	%f484, %f483, %f477;
	fma.rn.f32 	%f485, %f481, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f486, %f484, 0f40000000, 0fBF800000;
	ld.global.f32 	%f487, [cameraFov];
	mul.f32 	%f488, %f478, %f487;
	ld.global.f32 	%f489, [cameraRht];
	mul.f32 	%f490, %f485, %f489;
	ld.global.f32 	%f491, [cameraRht+4];
	mul.f32 	%f492, %f485, %f491;
	ld.global.f32 	%f493, [cameraRht+8];
	mul.f32 	%f494, %f485, %f493;
	ld.global.f32 	%f495, [cameraFwd];
	fma.rn.f32 	%f496, %f488, %f490, %f495;
	ld.global.f32 	%f497, [cameraFwd+4];
	fma.rn.f32 	%f498, %f488, %f492, %f497;
	ld.global.f32 	%f499, [cameraFwd+8];
	fma.rn.f32 	%f500, %f488, %f494, %f499;
	ld.global.f32 	%f501, [cameraUp];
	mul.f32 	%f502, %f486, %f501;
	ld.global.f32 	%f503, [cameraUp+4];
	mul.f32 	%f504, %f486, %f503;
	ld.global.f32 	%f505, [cameraUp+8];
	mul.f32 	%f506, %f486, %f505;
	fma.rn.f32 	%f507, %f487, %f502, %f496;
	fma.rn.f32 	%f508, %f487, %f504, %f498;
	fma.rn.f32 	%f509, %f487, %f506, %f500;
	mul.f32 	%f510, %f508, %f508;
	fma.rn.f32 	%f511, %f507, %f507, %f510;
	fma.rn.f32 	%f512, %f509, %f509, %f511;
	sqrt.rn.f32 	%f513, %f512;
	rcp.rn.f32 	%f514, %f513;
	mul.f32 	%f1319, %f507, %f514;
	mul.f32 	%f1320, %f508, %f514;
	mul.f32 	%f1321, %f514, %f509;
	bra.uni 	BB0_49;

BB0_9:
	mov.u32 	%r710, %r9;
	mov.u32 	%r711, %r18;

BB0_11:
	clz.b32 	%r713, %r709;
	setp.eq.s32	%p14, %r713, 0;
	shl.b32 	%r285, %r709, %r713;
	mov.u32 	%r286, 32;
	sub.s32 	%r287, %r286, %r713;
	shr.u32 	%r288, %r711, %r287;
	add.s32 	%r289, %r288, %r285;
	selp.b32	%r27, %r709, %r289, %p14;
	mov.u32 	%r290, -921707870;
	mul.hi.u32 	%r712, %r27, %r290;
	setp.eq.s32	%p15, %r9, 0;
	neg.s32 	%r291, %r19;
	selp.b32	%r714, %r19, %r291, %p15;
	setp.lt.s32	%p16, %r712, 1;
	@%p16 bra 	BB0_13;

	mul.lo.s32 	%r292, %r27, -921707870;
	shr.u32 	%r293, %r292, 31;
	shl.b32 	%r294, %r712, 1;
	add.s32 	%r712, %r293, %r294;
	add.s32 	%r713, %r713, 1;

BB0_13:
	mov.u32 	%r295, 126;
	sub.s32 	%r296, %r295, %r713;
	shl.b32 	%r297, %r296, 23;
	add.s32 	%r298, %r712, 1;
	shr.u32 	%r299, %r298, 7;
	add.s32 	%r300, %r299, 1;
	shr.u32 	%r301, %r300, 1;
	add.s32 	%r302, %r301, %r297;
	or.b32  	%r303, %r302, %r710;
	mov.b32 	 %f1308, %r303;

BB0_14:
	mul.rn.f32 	%f21, %f1308, %f1308;
	add.s32 	%r35, %r714, 1;
	and.b32  	%r36, %r35, 1;
	setp.eq.s32	%p17, %r36, 0;
	@%p17 bra 	BB0_16;

	mov.f32 	%f415, 0fBAB6061A;
	mov.f32 	%f416, 0f37CCF5CE;
	fma.rn.f32 	%f1309, %f416, %f21, %f415;
	bra.uni 	BB0_17;

BB0_16:
	mov.f32 	%f417, 0f3C08839E;
	mov.f32 	%f418, 0fB94CA1F9;
	fma.rn.f32 	%f1309, %f418, %f21, %f417;

BB0_17:
	@%p17 bra 	BB0_19;

	mov.f32 	%f419, 0f3D2AAAA5;
	fma.rn.f32 	%f420, %f1309, %f21, %f419;
	mov.f32 	%f421, 0fBF000000;
	fma.rn.f32 	%f1310, %f420, %f21, %f421;
	bra.uni 	BB0_20;

BB0_19:
	mov.f32 	%f422, 0fBE2AAAA3;
	fma.rn.f32 	%f423, %f1309, %f21, %f422;
	mov.f32 	%f424, 0f00000000;
	fma.rn.f32 	%f1310, %f423, %f21, %f424;

BB0_20:
	fma.rn.f32 	%f1311, %f1310, %f1308, %f1308;
	@%p17 bra 	BB0_22;

	mov.f32 	%f425, 0f3F800000;
	fma.rn.f32 	%f1311, %f1310, %f21, %f425;

BB0_22:
	and.b32  	%r304, %r35, 2;
	setp.eq.s32	%p20, %r304, 0;
	@%p20 bra 	BB0_24;

	mov.f32 	%f426, 0f00000000;
	mov.f32 	%f427, 0fBF800000;
	fma.rn.f32 	%f1311, %f1311, %f427, %f426;

BB0_24:
	@%p8 bra 	BB0_26;

	mov.f32 	%f428, 0f00000000;
	mul.rn.f32 	%f1313, %f1313, %f428;

BB0_26:
	mul.f32 	%f429, %f1313, 0f3F22F983;
	cvt.rni.s32.f32	%r724, %f429;
	cvt.rn.f32.s32	%f430, %r724;
	neg.f32 	%f431, %f430;
	fma.rn.f32 	%f433, %f431, %f409, %f1313;
	fma.rn.f32 	%f435, %f431, %f411, %f433;
	fma.rn.f32 	%f1314, %f431, %f413, %f435;
	abs.f32 	%f437, %f1313;
	setp.leu.f32	%p22, %f437, 0f47CE4780;
	@%p22 bra 	BB0_37;

	mov.b32 	 %r38, %f1313;
	shr.u32 	%r39, %r38, 23;
	shl.b32 	%r307, %r38, 8;
	or.b32  	%r40, %r307, -2147483648;
	mov.u32 	%r716, 0;
	mov.u64 	%rd232, __cudart_i2opi_f;
	mov.u32 	%r715, -6;
	mov.u64 	%rd233, %rd2;

BB0_28:
	.pragma "nounroll";
	ld.const.u32 	%r310, [%rd232];
	// inline asm
	{
	mad.lo.cc.u32   %r308, %r310, %r40, %r716;
	madc.hi.u32     %r716, %r310, %r40,  0;
	}
	// inline asm
	st.local.u32 	[%rd233], %r308;
	add.s64 	%rd233, %rd233, 4;
	add.s64 	%rd232, %rd232, 4;
	add.s32 	%r715, %r715, 1;
	setp.ne.s32	%p23, %r715, 0;
	@%p23 bra 	BB0_28;

	and.b32  	%r313, %r39, 255;
	add.s32 	%r314, %r313, -128;
	shr.u32 	%r315, %r314, 5;
	and.b32  	%r45, %r38, -2147483648;
	st.local.u32 	[%rd3], %r716;
	mov.u32 	%r316, 6;
	sub.s32 	%r317, %r316, %r315;
	mul.wide.s32 	%rd92, %r317, 4;
	add.s64 	%rd13, %rd2, %rd92;
	ld.local.u32 	%r717, [%rd13];
	ld.local.u32 	%r718, [%rd13+-4];
	and.b32  	%r48, %r39, 31;
	setp.eq.s32	%p24, %r48, 0;
	@%p24 bra 	BB0_31;

	mov.u32 	%r318, 32;
	sub.s32 	%r319, %r318, %r48;
	shr.u32 	%r320, %r718, %r319;
	shl.b32 	%r321, %r717, %r48;
	add.s32 	%r717, %r320, %r321;
	ld.local.u32 	%r322, [%rd13+-8];
	shr.u32 	%r323, %r322, %r319;
	shl.b32 	%r324, %r718, %r48;
	add.s32 	%r718, %r323, %r324;

BB0_31:
	shr.u32 	%r325, %r718, 30;
	shl.b32 	%r326, %r717, 2;
	add.s32 	%r719, %r325, %r326;
	shl.b32 	%r54, %r718, 2;
	shr.u32 	%r327, %r719, 31;
	shr.u32 	%r328, %r717, 30;
	add.s32 	%r55, %r327, %r328;
	setp.eq.s32	%p25, %r327, 0;
	@%p25 bra 	BB0_32;

	not.b32 	%r329, %r719;
	neg.s32 	%r721, %r54;
	setp.eq.s32	%p26, %r54, 0;
	selp.u32	%r330, 1, 0, %p26;
	add.s32 	%r719, %r330, %r329;
	xor.b32  	%r720, %r45, -2147483648;
	bra.uni 	BB0_34;

BB0_32:
	mov.u32 	%r720, %r45;
	mov.u32 	%r721, %r54;

BB0_34:
	clz.b32 	%r723, %r719;
	setp.eq.s32	%p27, %r723, 0;
	shl.b32 	%r331, %r719, %r723;
	mov.u32 	%r332, 32;
	sub.s32 	%r333, %r332, %r723;
	shr.u32 	%r334, %r721, %r333;
	add.s32 	%r335, %r334, %r331;
	selp.b32	%r63, %r719, %r335, %p27;
	mov.u32 	%r336, -921707870;
	mul.hi.u32 	%r722, %r63, %r336;
	setp.eq.s32	%p28, %r45, 0;
	neg.s32 	%r337, %r55;
	selp.b32	%r724, %r55, %r337, %p28;
	setp.lt.s32	%p29, %r722, 1;
	@%p29 bra 	BB0_36;

	mul.lo.s32 	%r338, %r63, -921707870;
	shr.u32 	%r339, %r338, 31;
	shl.b32 	%r340, %r722, 1;
	add.s32 	%r722, %r339, %r340;
	add.s32 	%r723, %r723, 1;

BB0_36:
	mov.u32 	%r341, 126;
	sub.s32 	%r342, %r341, %r723;
	shl.b32 	%r343, %r342, 23;
	add.s32 	%r344, %r722, 1;
	shr.u32 	%r345, %r344, 7;
	add.s32 	%r346, %r345, 1;
	shr.u32 	%r347, %r346, 1;
	add.s32 	%r348, %r347, %r343;
	or.b32  	%r349, %r348, %r720;
	mov.b32 	 %f1314, %r349;

BB0_37:
	mul.rn.f32 	%f38, %f1314, %f1314;
	and.b32  	%r71, %r724, 1;
	setp.eq.s32	%p30, %r71, 0;
	@%p30 bra 	BB0_39;

	mov.f32 	%f438, 0fBAB6061A;
	mov.f32 	%f439, 0f37CCF5CE;
	fma.rn.f32 	%f1315, %f439, %f38, %f438;
	bra.uni 	BB0_40;

BB0_39:
	mov.f32 	%f440, 0f3C08839E;
	mov.f32 	%f441, 0fB94CA1F9;
	fma.rn.f32 	%f1315, %f441, %f38, %f440;

BB0_40:
	@%p30 bra 	BB0_42;

	mov.f32 	%f442, 0f3D2AAAA5;
	fma.rn.f32 	%f443, %f1315, %f38, %f442;
	mov.f32 	%f444, 0fBF000000;
	fma.rn.f32 	%f1316, %f443, %f38, %f444;
	bra.uni 	BB0_43;

BB0_42:
	mov.f32 	%f445, 0fBE2AAAA3;
	fma.rn.f32 	%f446, %f1315, %f38, %f445;
	mov.f32 	%f447, 0f00000000;
	fma.rn.f32 	%f1316, %f446, %f38, %f447;

BB0_43:
	fma.rn.f32 	%f1317, %f1316, %f1314, %f1314;
	@%p30 bra 	BB0_45;

	mov.f32 	%f448, 0f3F800000;
	fma.rn.f32 	%f1317, %f1316, %f38, %f448;

BB0_45:
	and.b32  	%r350, %r724, 2;
	setp.eq.s32	%p33, %r350, 0;
	@%p33 bra 	BB0_47;

	mov.f32 	%f449, 0f00000000;
	mov.f32 	%f450, 0fBF800000;
	fma.rn.f32 	%f1317, %f1317, %f450, %f449;

BB0_47:
	mul.f32 	%f451, %f13, %f1311;
	mul.f32 	%f452, %f451, %f451;
	mov.f32 	%f453, 0f3F800000;
	sub.f32 	%f454, %f453, %f452;
	mul.f32 	%f455, %f13, %f1317;
	mul.f32 	%f456, %f455, %f455;
	sub.f32 	%f457, %f454, %f456;
	mov.f32 	%f458, 0f00000000;
	max.f32 	%f459, %f458, %f457;
	sqrt.rn.f32 	%f460, %f459;
	mul.f32 	%f461, %f10, %f455;
	mul.f32 	%f462, %f11, %f455;
	mul.f32 	%f463, %f12, %f455;
	mul.f32 	%f464, %f8, %f11;
	mul.f32 	%f465, %f9, %f12;
	sub.f32 	%f466, %f464, %f465;
	fma.rn.f32 	%f467, %f466, %f451, %f461;
	mul.f32 	%f468, %f7, %f12;
	mul.f32 	%f469, %f8, %f10;
	sub.f32 	%f470, %f468, %f469;
	fma.rn.f32 	%f471, %f470, %f451, %f462;
	mul.f32 	%f472, %f9, %f10;
	mul.f32 	%f473, %f7, %f11;
	sub.f32 	%f474, %f472, %f473;
	fma.rn.f32 	%f475, %f474, %f451, %f463;
	fma.rn.f32 	%f1319, %f7, %f460, %f467;
	fma.rn.f32 	%f1320, %f9, %f460, %f471;
	fma.rn.f32 	%f1321, %f8, %f460, %f475;

BB0_49:
	add.u64 	%rd99, %SP, 0;
	cvta.to.local.u64 	%rd100, %rd99;
	add.s64 	%rd14, %rd100, 12;
	mov.u32 	%r361, -1082130432;
	st.local.u32 	[%rd100+12], %r361;
	mov.u32 	%r362, 0;
	st.local.u32 	[%rd100], %r362;
	st.local.u32 	[%rd100+4], %r362;
	st.local.u32 	[%rd100+8], %r362;
	st.local.u32 	[%rd100+16], %r362;
	st.local.u32 	[%rd100+20], %r362;
	st.local.u32 	[%rd100+24], %r362;
	ld.global.v2.u32 	{%r363, %r364}, [pixelID];
	cvt.u64.u32	%rd95, %r363;
	cvt.u64.u32	%rd96, %r364;
	mov.u64 	%rd101, GBufferAtten;
	cvta.global.u64 	%rd94, %rd101;
	mov.u32 	%r360, 12;
	// inline asm
	call (%rd93), _rt_buffer_get_64, (%rd94, %r224, %r360, %rd95, %rd96, %rd235, %rd235);
	// inline asm
	ld.f32 	%f70, [%rd93+8];
	ld.f32 	%f68, [%rd93+4];
	ld.f32 	%f69, [%rd93];
	add.f32 	%f515, %f69, %f68;
	add.f32 	%f516, %f70, %f515;
	ld.global.u32 	%r367, [bounceFlag];
	setp.ne.s32	%p34, %r367, 0;
	setp.eq.f32	%p35, %f516, 0f00000000;
	and.pred  	%p36, %p34, %p35;
	@%p36 bra 	BB0_51;

	ld.global.u32 	%r368, [root];
	mov.u32 	%r369, 0;
	mov.f32 	%f523, 0f00000000;
	mov.f32 	%f524, 0f6C4ECB8F;
	mov.u32 	%r370, 28;
	// inline asm
	call _rt_trace_64, (%r368, %f1322, %f1323, %f1324, %f1319, %f1320, %f1321, %r369, %f523, %f524, %rd99, %r370);
	// inline asm

BB0_51:
	ld.local.f32 	%f71, [%rd14];
	setp.ltu.f32	%p37, %f71, 0f00000000;
	mov.f32 	%f1382, 0f00000000;
	mov.f32 	%f1383, %f1382;
	mov.f32 	%f1384, %f1382;
	mov.f32 	%f1385, %f1382;
	mov.f32 	%f1386, %f1382;
	mov.f32 	%f1387, %f1382;
	mov.f32 	%f1368, %f1382;
	mov.f32 	%f1369, %f1382;
	mov.f32 	%f1370, %f1382;
	@%p37 bra 	BB0_186;

	fma.rn.f32 	%f534, %f1319, %f71, %f1322;
	fma.rn.f32 	%f535, %f1320, %f71, %f1323;
	fma.rn.f32 	%f536, %f1321, %f71, %f1324;
	mul.f32 	%f537, %f534, 0f3456BF95;
	mul.f32 	%f538, %f535, 0f3456BF95;
	mul.f32 	%f539, %f536, 0f3456BF95;
	abs.f32 	%f540, %f537;
	abs.f32 	%f541, %f538;
	abs.f32 	%f542, %f539;
	max.f32 	%f543, %f540, %f541;
	max.f32 	%f544, %f543, %f542;
	mov.f32 	%f545, 0f38D1B717;
	max.f32 	%f546, %f544, %f545;
	ld.local.f32 	%f547, [%rd14+-12];
	ld.local.f32 	%f548, [%rd14+-8];
	ld.local.f32 	%f549, [%rd14+-4];
	fma.rn.f32 	%f72, %f546, %f547, %f534;
	fma.rn.f32 	%f73, %f546, %f548, %f535;
	fma.rn.f32 	%f74, %f546, %f549, %f536;
	ld.global.v2.u32 	{%r375, %r376}, [pixelID];
	cvt.u64.u32	%rd105, %r375;
	cvt.u64.u32	%rd106, %r376;
	mov.u64 	%rd115, GBufferPos;
	cvta.global.u64 	%rd104, %rd115;
	// inline asm
	call (%rd103), _rt_buffer_get_64, (%rd104, %r224, %r360, %rd105, %rd106, %rd235, %rd235);
	// inline asm
	st.f32 	[%rd103+8], %f74;
	st.f32 	[%rd103+4], %f73;
	st.f32 	[%rd103], %f72;
	ld.global.v2.u32 	{%r379, %r380}, [pixelID];
	cvt.u64.u32	%rd111, %r379;
	cvt.u64.u32	%rd112, %r380;
	mov.u64 	%rd116, GBufferNormal;
	cvta.global.u64 	%rd110, %rd116;
	// inline asm
	call (%rd109), _rt_buffer_get_64, (%rd110, %r224, %r360, %rd111, %rd112, %rd235, %rd235);
	// inline asm
	ld.local.f32 	%f550, [%rd14+-12];
	ld.local.f32 	%f551, [%rd14+-8];
	ld.local.f32 	%f552, [%rd14+-4];
	st.f32 	[%rd109+8], %f552;
	st.f32 	[%rd109+4], %f551;
	st.f32 	[%rd109], %f550;
	ld.local.f32 	%f553, [%rd14+12];
	ld.local.f32 	%f554, [%rd14+8];
	ld.local.f32 	%f555, [%rd14+4];
	cvt.rmi.f32.f32	%f556, %f555;
	cvt.rmi.f32.f32	%f557, %f554;
	cvt.rmi.f32.f32	%f558, %f553;
	sub.f32 	%f1385, %f555, %f556;
	sub.f32 	%f1386, %f554, %f557;
	sub.f32 	%f1387, %f553, %f558;
	mul.f32 	%f1382, %f556, 0f3B808081;
	mul.f32 	%f1383, %f557, 0f3B808081;
	mul.f32 	%f1384, %f558, 0f3B808081;
	ld.global.u32 	%r383, [bounceFlag];
	setp.lt.s32	%p38, %r383, 1;
	@%p38 bra 	BB0_54;

	mul.f32 	%f1385, %f69, %f1385;
	mul.f32 	%f1386, %f68, %f1386;
	mul.f32 	%f1387, %f70, %f1387;
	mul.f32 	%f1382, %f69, %f1382;
	mul.f32 	%f1383, %f68, %f1383;
	mul.f32 	%f1384, %f70, %f1384;

BB0_54:
	mov.u64 	%rd122, globalLights;
	cvta.global.u64 	%rd121, %rd122;
	mov.u32 	%r384, 1;
	mov.u32 	%r385, 32;
	// inline asm
	call (%rd117, %rd118, %rd119, %rd120), _rt_buffer_get_size_64, (%rd121, %r384, %r385);
	// inline asm
	cvt.u32.u64	%r72, %rd117;
	setp.eq.s32	%p39, %r72, 0;
	mov.f32 	%f1368, 0f00000000;
	mov.f32 	%f1369, %f1368;
	mov.f32 	%f1370, %f1368;
	@%p39 bra 	BB0_160;

	// inline asm
	call (%rd123, %rd124, %rd125, %rd126), _rt_buffer_get_size_64, (%rd121, %r384, %r385);
	// inline asm
	and.b64  	%rd135, %rd123, 4294967295;
	cvt.rn.f32.u64	%f562, %rd135;
	mul.f32 	%f563, %f3, %f562;
	cvt.rzi.u32.f32	%r390, %f563;
	cvt.u64.u32	%rd130, %r390;
	// inline asm
	call (%rd128), _rt_buffer_get_64, (%rd121, %r384, %r385, %rd130, %rd235, %rd235, %rd235);
	// inline asm
	ld.f32 	%f106, [%rd128+28];
	ld.f32 	%f105, [%rd128+24];
	ld.f32 	%f104, [%rd128+20];
	ld.f32 	%f103, [%rd128+16];
	ld.f32 	%f96, [%rd128+12];
	ld.f32 	%f102, [%rd128+8];
	ld.f32 	%f101, [%rd128+4];
	ld.f32 	%f107, [%rd128];
	setp.lt.f32	%p40, %f107, 0f3F800000;
	@%p40 bra 	BB0_109;
	bra.uni 	BB0_56;

BB0_109:
	ld.local.f32 	%f686, [%rd14+-12];
	mul.f32 	%f687, %f101, %f686;
	ld.local.f32 	%f688, [%rd14+-8];
	mul.f32 	%f689, %f102, %f688;
	neg.f32 	%f690, %f689;
	sub.f32 	%f691, %f690, %f687;
	ld.local.f32 	%f692, [%rd14+-4];
	mul.f32 	%f693, %f96, %f692;
	sub.f32 	%f176, %f691, %f693;
	mov.f32 	%f1365, 0f00000000;
	setp.le.f32	%p73, %f176, 0f00000000;
	mov.f32 	%f1366, %f1365;
	mov.f32 	%f1367, %f1365;
	@%p73 bra 	BB0_159;

	abs.f32 	%f695, %f101;
	abs.f32 	%f696, %f96;
	setp.gt.f32	%p74, %f695, %f696;
	neg.f32 	%f697, %f102;
	selp.f32	%f698, %f697, 0f00000000, %p74;
	neg.f32 	%f699, %f96;
	selp.f32	%f700, %f101, %f699, %p74;
	selp.f32	%f701, 0f00000000, %f102, %p74;
	mul.f32 	%f702, %f700, %f700;
	fma.rn.f32 	%f703, %f698, %f698, %f702;
	fma.rn.f32 	%f704, %f701, %f701, %f703;
	sqrt.rn.f32 	%f705, %f704;
	rcp.rn.f32 	%f706, %f705;
	mul.f32 	%f177, %f698, %f706;
	mul.f32 	%f178, %f700, %f706;
	mul.f32 	%f179, %f701, %f706;
	setp.ltu.f32	%p75, %f103, 0f00000000;
	mov.f32 	%f1364, 0f3F800000;
	@%p75 bra 	BB0_158;

	sqrt.rn.f32 	%f180, %f1;
	add.u64 	%rd154, %SP, 32;
	cvta.to.local.u64 	%rd28, %rd154;
	mul.f32 	%f1358, %f2, 0f40C90FDB;
	abs.f32 	%f182, %f1358;
	setp.neu.f32	%p76, %f182, 0f7F800000;
	mov.f32 	%f1352, %f1358;
	@%p76 bra 	BB0_113;

	mov.f32 	%f707, 0f00000000;
	mul.rn.f32 	%f1352, %f1358, %f707;

BB0_113:
	mul.f32 	%f708, %f1352, 0f3F22F983;
	cvt.rni.s32.f32	%r754, %f708;
	cvt.rn.f32.s32	%f709, %r754;
	neg.f32 	%f710, %f709;
	mov.f32 	%f711, 0f3FC90FDA;
	fma.rn.f32 	%f712, %f710, %f711, %f1352;
	mov.f32 	%f713, 0f33A22168;
	fma.rn.f32 	%f714, %f710, %f713, %f712;
	mov.f32 	%f715, 0f27C234C5;
	fma.rn.f32 	%f1353, %f710, %f715, %f714;
	abs.f32 	%f716, %f1352;
	add.s64 	%rd29, %rd28, 24;
	setp.leu.f32	%p77, %f716, 0f47CE4780;
	@%p77 bra 	BB0_124;

	mov.b32 	 %r144, %f1352;
	shr.u32 	%r145, %r144, 23;
	shl.b32 	%r494, %r144, 8;
	or.b32  	%r146, %r494, -2147483648;
	mov.u32 	%r746, 0;
	mov.u64 	%rd238, __cudart_i2opi_f;
	mov.u32 	%r745, -6;
	mov.u64 	%rd239, %rd28;

BB0_115:
	.pragma "nounroll";
	ld.const.u32 	%r497, [%rd238];
	// inline asm
	{
	mad.lo.cc.u32   %r495, %r497, %r146, %r746;
	madc.hi.u32     %r746, %r497, %r146,  0;
	}
	// inline asm
	st.local.u32 	[%rd239], %r495;
	add.s64 	%rd239, %rd239, 4;
	add.s64 	%rd238, %rd238, 4;
	add.s32 	%r745, %r745, 1;
	setp.ne.s32	%p78, %r745, 0;
	@%p78 bra 	BB0_115;

	and.b32  	%r500, %r145, 255;
	add.s32 	%r501, %r500, -128;
	shr.u32 	%r502, %r501, 5;
	and.b32  	%r151, %r144, -2147483648;
	st.local.u32 	[%rd29], %r746;
	mov.u32 	%r503, 6;
	sub.s32 	%r504, %r503, %r502;
	mul.wide.s32 	%rd156, %r504, 4;
	add.s64 	%rd34, %rd28, %rd156;
	ld.local.u32 	%r747, [%rd34];
	ld.local.u32 	%r748, [%rd34+-4];
	and.b32  	%r154, %r145, 31;
	setp.eq.s32	%p79, %r154, 0;
	@%p79 bra 	BB0_118;

	sub.s32 	%r506, %r385, %r154;
	shr.u32 	%r507, %r748, %r506;
	shl.b32 	%r508, %r747, %r154;
	add.s32 	%r747, %r507, %r508;
	ld.local.u32 	%r509, [%rd34+-8];
	shr.u32 	%r510, %r509, %r506;
	shl.b32 	%r511, %r748, %r154;
	add.s32 	%r748, %r510, %r511;

BB0_118:
	shr.u32 	%r512, %r748, 30;
	shl.b32 	%r513, %r747, 2;
	add.s32 	%r749, %r512, %r513;
	shl.b32 	%r160, %r748, 2;
	shr.u32 	%r514, %r749, 31;
	shr.u32 	%r515, %r747, 30;
	add.s32 	%r161, %r514, %r515;
	setp.eq.s32	%p80, %r514, 0;
	@%p80 bra 	BB0_119;

	not.b32 	%r516, %r749;
	neg.s32 	%r751, %r160;
	setp.eq.s32	%p81, %r160, 0;
	selp.u32	%r517, 1, 0, %p81;
	add.s32 	%r749, %r517, %r516;
	xor.b32  	%r750, %r151, -2147483648;
	bra.uni 	BB0_121;

BB0_56:
	ld.local.f32 	%f110, [%rd14+-8];
	ld.local.f32 	%f109, [%rd14+-4];
	ld.local.f32 	%f108, [%rd14+-12];
	abs.f32 	%f564, %f108;
	abs.f32 	%f565, %f109;
	setp.gt.f32	%p41, %f564, %f565;
	neg.f32 	%f566, %f110;
	neg.f32 	%f567, %f109;
	selp.f32	%f568, %f566, 0f00000000, %p41;
	selp.f32	%f569, %f108, %f567, %p41;
	selp.f32	%f570, 0f00000000, %f110, %p41;
	mul.f32 	%f571, %f569, %f569;
	fma.rn.f32 	%f572, %f568, %f568, %f571;
	fma.rn.f32 	%f573, %f570, %f570, %f572;
	sqrt.rn.f32 	%f574, %f573;
	rcp.rn.f32 	%f575, %f574;
	mul.f32 	%f111, %f568, %f575;
	mul.f32 	%f112, %f569, %f575;
	mul.f32 	%f113, %f570, %f575;
	sqrt.rn.f32 	%f114, %f1;
	mul.f32 	%f1337, %f2, 0f40C90FDB;
	abs.f32 	%f116, %f1337;
	setp.neu.f32	%p42, %f116, 0f7F800000;
	mov.f32 	%f1331, %f1337;
	@%p42 bra 	BB0_58;

	mov.f32 	%f576, 0f00000000;
	mul.rn.f32 	%f1331, %f1337, %f576;

BB0_58:
	mul.f32 	%f577, %f1331, 0f3F22F983;
	cvt.rni.s32.f32	%r734, %f577;
	cvt.rn.f32.s32	%f578, %r734;
	neg.f32 	%f579, %f578;
	mov.f32 	%f580, 0f3FC90FDA;
	fma.rn.f32 	%f581, %f579, %f580, %f1331;
	mov.f32 	%f582, 0f33A22168;
	fma.rn.f32 	%f583, %f579, %f582, %f581;
	mov.f32 	%f584, 0f27C234C5;
	fma.rn.f32 	%f1332, %f579, %f584, %f583;
	abs.f32 	%f585, %f1331;
	setp.leu.f32	%p43, %f585, 0f47CE4780;
	@%p43 bra 	BB0_69;

	mov.b32 	 %r74, %f1331;
	shl.b32 	%r393, %r74, 8;
	or.b32  	%r75, %r393, -2147483648;
	add.u64 	%rd137, %SP, 32;
	cvta.to.local.u64 	%rd15, %rd137;
	mov.u32 	%r725, 0;
	mov.u64 	%rd234, %rd15;
	mov.u32 	%r726, %r725;

BB0_60:
	.pragma "nounroll";
	shl.b64 	%rd138, %rd235, 2;
	mov.u64 	%rd139, __cudart_i2opi_f;
	add.s64 	%rd140, %rd139, %rd138;
	ld.const.u32 	%r396, [%rd140];
	// inline asm
	{
	mad.lo.cc.u32   %r394, %r396, %r75, %r726;
	madc.hi.u32     %r726, %r396, %r75,  0;
	}
	// inline asm
	st.local.u32 	[%rd234], %r394;
	add.s32 	%r725, %r725, 1;
	cvt.s64.s32	%rd235, %r725;
	mul.wide.s32 	%rd143, %r725, 4;
	add.s64 	%rd234, %rd15, %rd143;
	setp.ne.s32	%p44, %r725, 6;
	@%p44 bra 	BB0_60;

	bfe.u32 	%r399, %r74, 23, 8;
	add.s32 	%r400, %r399, -128;
	shr.u32 	%r401, %r400, 5;
	and.b32  	%r80, %r74, -2147483648;
	cvta.to.local.u64 	%rd145, %rd137;
	st.local.u32 	[%rd145+24], %r726;
	bfe.u32 	%r81, %r74, 23, 5;
	mov.u32 	%r402, 6;
	sub.s32 	%r403, %r402, %r401;
	mul.wide.s32 	%rd146, %r403, 4;
	add.s64 	%rd20, %rd145, %rd146;
	ld.local.u32 	%r727, [%rd20];
	ld.local.u32 	%r728, [%rd20+-4];
	setp.eq.s32	%p45, %r81, 0;
	@%p45 bra 	BB0_63;

	sub.s32 	%r405, %r385, %r81;
	shr.u32 	%r406, %r728, %r405;
	shl.b32 	%r407, %r727, %r81;
	add.s32 	%r727, %r406, %r407;
	ld.local.u32 	%r408, [%rd20+-8];
	shr.u32 	%r409, %r408, %r405;
	shl.b32 	%r410, %r728, %r81;
	add.s32 	%r728, %r409, %r410;

BB0_63:
	shr.u32 	%r411, %r728, 30;
	shl.b32 	%r412, %r727, 2;
	add.s32 	%r729, %r411, %r412;
	shl.b32 	%r89, %r728, 2;
	shr.u32 	%r413, %r729, 31;
	shr.u32 	%r414, %r727, 30;
	add.s32 	%r90, %r413, %r414;
	setp.eq.s32	%p46, %r413, 0;
	@%p46 bra 	BB0_64;

	not.b32 	%r415, %r729;
	neg.s32 	%r731, %r89;
	setp.eq.s32	%p47, %r89, 0;
	selp.u32	%r416, 1, 0, %p47;
	add.s32 	%r729, %r416, %r415;
	xor.b32  	%r730, %r80, -2147483648;
	bra.uni 	BB0_66;

BB0_64:
	mov.u32 	%r730, %r80;
	mov.u32 	%r731, %r89;

BB0_66:
	clz.b32 	%r733, %r729;
	setp.eq.s32	%p48, %r733, 0;
	shl.b32 	%r417, %r729, %r733;
	sub.s32 	%r419, %r385, %r733;
	shr.u32 	%r420, %r731, %r419;
	add.s32 	%r421, %r420, %r417;
	selp.b32	%r98, %r729, %r421, %p48;
	mov.u32 	%r422, -921707870;
	mul.hi.u32 	%r732, %r98, %r422;
	setp.eq.s32	%p49, %r80, 0;
	neg.s32 	%r423, %r90;
	selp.b32	%r734, %r90, %r423, %p49;
	setp.lt.s32	%p50, %r732, 1;
	@%p50 bra 	BB0_68;

	mul.lo.s32 	%r424, %r98, -921707870;
	shr.u32 	%r425, %r424, 31;
	shl.b32 	%r426, %r732, 1;
	add.s32 	%r732, %r425, %r426;
	add.s32 	%r733, %r733, 1;

BB0_68:
	mov.u32 	%r427, 126;
	sub.s32 	%r428, %r427, %r733;
	shl.b32 	%r429, %r428, 23;
	add.s32 	%r430, %r732, 1;
	shr.u32 	%r431, %r430, 7;
	add.s32 	%r432, %r431, 1;
	shr.u32 	%r433, %r432, 1;
	add.s32 	%r434, %r433, %r429;
	or.b32  	%r435, %r434, %r730;
	mov.b32 	 %f1332, %r435;

BB0_69:
	mul.rn.f32 	%f122, %f1332, %f1332;
	add.s32 	%r106, %r734, 1;
	and.b32  	%r107, %r106, 1;
	setp.eq.s32	%p51, %r107, 0;
	@%p51 bra 	BB0_71;

	mov.f32 	%f586, 0fBAB6061A;
	mov.f32 	%f587, 0f37CCF5CE;
	fma.rn.f32 	%f1333, %f587, %f122, %f586;
	bra.uni 	BB0_72;

BB0_71:
	mov.f32 	%f588, 0f3C08839E;
	mov.f32 	%f589, 0fB94CA1F9;
	fma.rn.f32 	%f1333, %f589, %f122, %f588;

BB0_72:
	@%p51 bra 	BB0_74;

	mov.f32 	%f590, 0f3D2AAAA5;
	fma.rn.f32 	%f591, %f1333, %f122, %f590;
	mov.f32 	%f592, 0fBF000000;
	fma.rn.f32 	%f1334, %f591, %f122, %f592;
	bra.uni 	BB0_75;

BB0_74:
	mov.f32 	%f593, 0fBE2AAAA3;
	fma.rn.f32 	%f594, %f1333, %f122, %f593;
	mov.f32 	%f595, 0f00000000;
	fma.rn.f32 	%f1334, %f594, %f122, %f595;

BB0_75:
	fma.rn.f32 	%f1335, %f1334, %f1332, %f1332;
	@%p51 bra 	BB0_77;

	mov.f32 	%f596, 0f3F800000;
	fma.rn.f32 	%f1335, %f1334, %f122, %f596;

BB0_77:
	and.b32  	%r436, %r106, 2;
	setp.eq.s32	%p54, %r436, 0;
	@%p54 bra 	BB0_79;

	mov.f32 	%f597, 0f00000000;
	mov.f32 	%f598, 0fBF800000;
	fma.rn.f32 	%f1335, %f1335, %f598, %f597;

BB0_79:
	@%p42 bra 	BB0_81;

	mov.f32 	%f599, 0f00000000;
	mul.rn.f32 	%f1337, %f1337, %f599;

BB0_81:
	mul.f32 	%f600, %f1337, 0f3F22F983;
	cvt.rni.s32.f32	%r744, %f600;
	cvt.rn.f32.s32	%f601, %r744;
	neg.f32 	%f602, %f601;
	fma.rn.f32 	%f604, %f602, %f580, %f1337;
	fma.rn.f32 	%f606, %f602, %f582, %f604;
	fma.rn.f32 	%f1338, %f602, %f584, %f606;
	abs.f32 	%f608, %f1337;
	setp.leu.f32	%p56, %f608, 0f47CE4780;
	@%p56 bra 	BB0_92;

	mov.b32 	 %r109, %f1337;
	shr.u32 	%r110, %r109, 23;
	shl.b32 	%r439, %r109, 8;
	or.b32  	%r111, %r439, -2147483648;
	add.u64 	%rd148, %SP, 32;
	cvta.to.local.u64 	%rd237, %rd148;
	mov.u64 	%rd236, __cudart_i2opi_f;
	mov.u32 	%r735, -6;
	mov.u32 	%r736, %r362;

BB0_83:
	.pragma "nounroll";
	ld.const.u32 	%r442, [%rd236];
	// inline asm
	{
	mad.lo.cc.u32   %r440, %r442, %r111, %r736;
	madc.hi.u32     %r736, %r442, %r111,  0;
	}
	// inline asm
	st.local.u32 	[%rd237], %r440;
	add.s64 	%rd237, %rd237, 4;
	add.s64 	%rd236, %rd236, 4;
	add.s32 	%r735, %r735, 1;
	setp.ne.s32	%p57, %r735, 0;
	@%p57 bra 	BB0_83;

	and.b32  	%r445, %r110, 255;
	add.s32 	%r446, %r445, -128;
	shr.u32 	%r447, %r446, 5;
	and.b32  	%r116, %r109, -2147483648;
	cvta.to.local.u64 	%rd150, %rd148;
	st.local.u32 	[%rd150+24], %r736;
	mov.u32 	%r448, 6;
	sub.s32 	%r449, %r448, %r447;
	mul.wide.s32 	%rd151, %r449, 4;
	add.s64 	%rd26, %rd150, %rd151;
	ld.local.u32 	%r737, [%rd26];
	ld.local.u32 	%r738, [%rd26+-4];
	and.b32  	%r119, %r110, 31;
	setp.eq.s32	%p58, %r119, 0;
	@%p58 bra 	BB0_86;

	sub.s32 	%r451, %r385, %r119;
	shr.u32 	%r452, %r738, %r451;
	shl.b32 	%r453, %r737, %r119;
	add.s32 	%r737, %r452, %r453;
	ld.local.u32 	%r454, [%rd26+-8];
	shr.u32 	%r455, %r454, %r451;
	shl.b32 	%r456, %r738, %r119;
	add.s32 	%r738, %r455, %r456;

BB0_86:
	shr.u32 	%r457, %r738, 30;
	shl.b32 	%r458, %r737, 2;
	add.s32 	%r739, %r457, %r458;
	shl.b32 	%r125, %r738, 2;
	shr.u32 	%r459, %r739, 31;
	shr.u32 	%r460, %r737, 30;
	add.s32 	%r126, %r459, %r460;
	setp.eq.s32	%p59, %r459, 0;
	@%p59 bra 	BB0_87;

	not.b32 	%r461, %r739;
	neg.s32 	%r741, %r125;
	setp.eq.s32	%p60, %r125, 0;
	selp.u32	%r462, 1, 0, %p60;
	add.s32 	%r739, %r462, %r461;
	xor.b32  	%r740, %r116, -2147483648;
	bra.uni 	BB0_89;

BB0_87:
	mov.u32 	%r740, %r116;
	mov.u32 	%r741, %r125;

BB0_89:
	clz.b32 	%r743, %r739;
	setp.eq.s32	%p61, %r743, 0;
	shl.b32 	%r463, %r739, %r743;
	sub.s32 	%r465, %r385, %r743;
	shr.u32 	%r466, %r741, %r465;
	add.s32 	%r467, %r466, %r463;
	selp.b32	%r134, %r739, %r467, %p61;
	mov.u32 	%r468, -921707870;
	mul.hi.u32 	%r742, %r134, %r468;
	setp.eq.s32	%p62, %r116, 0;
	neg.s32 	%r469, %r126;
	selp.b32	%r744, %r126, %r469, %p62;
	setp.lt.s32	%p63, %r742, 1;
	@%p63 bra 	BB0_91;

	mul.lo.s32 	%r470, %r134, -921707870;
	shr.u32 	%r471, %r470, 31;
	shl.b32 	%r472, %r742, 1;
	add.s32 	%r742, %r471, %r472;
	add.s32 	%r743, %r743, 1;

BB0_91:
	mov.u32 	%r473, 126;
	sub.s32 	%r474, %r473, %r743;
	shl.b32 	%r475, %r474, 23;
	add.s32 	%r476, %r742, 1;
	shr.u32 	%r477, %r476, 7;
	add.s32 	%r478, %r477, 1;
	shr.u32 	%r479, %r478, 1;
	add.s32 	%r480, %r479, %r475;
	or.b32  	%r481, %r480, %r740;
	mov.b32 	 %f1338, %r481;

BB0_92:
	mul.rn.f32 	%f139, %f1338, %f1338;
	and.b32  	%r142, %r744, 1;
	setp.eq.s32	%p64, %r142, 0;
	@%p64 bra 	BB0_94;

	mov.f32 	%f609, 0fBAB6061A;
	mov.f32 	%f610, 0f37CCF5CE;
	fma.rn.f32 	%f1339, %f610, %f139, %f609;
	bra.uni 	BB0_95;

BB0_94:
	mov.f32 	%f611, 0f3C08839E;
	mov.f32 	%f612, 0fB94CA1F9;
	fma.rn.f32 	%f1339, %f612, %f139, %f611;

BB0_95:
	@%p64 bra 	BB0_97;

	mov.f32 	%f613, 0f3D2AAAA5;
	fma.rn.f32 	%f614, %f1339, %f139, %f613;
	mov.f32 	%f615, 0fBF000000;
	fma.rn.f32 	%f1340, %f614, %f139, %f615;
	bra.uni 	BB0_98;

BB0_97:
	mov.f32 	%f616, 0fBE2AAAA3;
	fma.rn.f32 	%f617, %f1339, %f139, %f616;
	mov.f32 	%f618, 0f00000000;
	fma.rn.f32 	%f1340, %f617, %f139, %f618;

BB0_98:
	fma.rn.f32 	%f1341, %f1340, %f1338, %f1338;
	@%p64 bra 	BB0_100;

	mov.f32 	%f619, 0f3F800000;
	fma.rn.f32 	%f1341, %f1340, %f139, %f619;

BB0_100:
	and.b32  	%r482, %r744, 2;
	setp.eq.s32	%p67, %r482, 0;
	@%p67 bra 	BB0_102;

	mov.f32 	%f620, 0f00000000;
	mov.f32 	%f621, 0fBF800000;
	fma.rn.f32 	%f1341, %f1341, %f621, %f620;

BB0_102:
	mul.f32 	%f625, %f114, %f1335;
	mul.f32 	%f626, %f625, %f625;
	mov.f32 	%f1343, 0f3F800000;
	sub.f32 	%f628, %f1343, %f626;
	mul.f32 	%f629, %f114, %f1341;
	mul.f32 	%f630, %f629, %f629;
	sub.f32 	%f631, %f628, %f630;
	mov.f32 	%f1346, 0f00000000;
	max.f32 	%f632, %f1346, %f631;
	sqrt.rn.f32 	%f633, %f632;
	mul.f32 	%f634, %f111, %f629;
	mul.f32 	%f635, %f112, %f629;
	mul.f32 	%f636, %f113, %f629;
	mul.f32 	%f637, %f109, %f112;
	mul.f32 	%f638, %f110, %f113;
	sub.f32 	%f639, %f637, %f638;
	fma.rn.f32 	%f640, %f639, %f625, %f634;
	mul.f32 	%f641, %f108, %f113;
	mul.f32 	%f642, %f109, %f111;
	sub.f32 	%f643, %f641, %f642;
	fma.rn.f32 	%f644, %f643, %f625, %f635;
	mul.f32 	%f645, %f110, %f111;
	mul.f32 	%f646, %f108, %f112;
	sub.f32 	%f647, %f645, %f646;
	fma.rn.f32 	%f648, %f647, %f625, %f636;
	fma.rn.f32 	%f151, %f108, %f633, %f640;
	fma.rn.f32 	%f152, %f110, %f633, %f644;
	fma.rn.f32 	%f153, %f109, %f633, %f648;
	add.u64 	%rd152, %SP, 28;
	cvta.to.local.u64 	%rd27, %rd152;
	st.local.u32 	[%rd27], %r362;
	setp.gt.f32	%p68, %f152, 0f00000000;
	setp.eq.f32	%p69, %f103, 0f00000000;
	or.pred  	%p70, %p69, %p68;
	mov.f32 	%f1347, %f1346;
	mov.f32 	%f1348, %f1346;
	@!%p70 bra 	BB0_106;
	bra.uni 	BB0_103;

BB0_103:
	mov.u32 	%r487, 1065353216;
	st.local.u32 	[%rd27], %r487;
	mul.f32 	%f660, %f72, 0f3456BF95;
	abs.f32 	%f661, %f660;
	mul.f32 	%f662, %f73, 0f3456BF95;
	abs.f32 	%f663, %f662;
	mul.f32 	%f664, %f74, 0f3456BF95;
	abs.f32 	%f665, %f664;
	max.f32 	%f666, %f661, %f663;
	max.f32 	%f667, %f666, %f665;
	max.f32 	%f655, %f667, %f545;
	ld.global.u32 	%r484, [root];
	mov.f32 	%f656, 0f6C4ECB8F;
	mov.u32 	%r486, 4;
	// inline asm
	call _rt_trace_64, (%r484, %f72, %f73, %f74, %f151, %f152, %f153, %r384, %f655, %f656, %rd152, %r486);
	// inline asm
	setp.leu.f32	%p71, %f101, 0f00000000;
	mov.f32 	%f1344, %f1343;
	mov.f32 	%f1345, %f1343;
	@%p71 bra 	BB0_105;

	cvt.rzi.s32.f32	%r488, %f102;
	neg.f32 	%f675, %f151;
	neg.f32 	%f674, %f152;
	neg.f32 	%f673, %f153;
	mov.u32 	%r489, 6;
	// inline asm
	call (%f1343, %f1344, %f1345, %f672), _rt_texture_get_base_id, (%r488, %r489, %f673, %f674, %f675, %r362);
	// inline asm

BB0_105:
	ld.local.f32 	%f676, [%rd27];
	fma.rn.f32 	%f1346, %f1343, %f676, 0f00000000;
	fma.rn.f32 	%f1347, %f1344, %f676, 0f00000000;
	fma.rn.f32 	%f1348, %f1345, %f676, 0f00000000;

BB0_106:
	ld.global.u32 	%r491, [bounceFlag];
	setp.lt.s32	%p72, %r491, 1;
	@%p72 bra 	BB0_108;

	add.f32 	%f677, %f107, 0fBF800000;
	mul.f32 	%f678, %f677, 0f42C80000;
	mul.f32 	%f1346, %f678, %f1346;
	mul.f32 	%f1347, %f678, %f1347;
	mul.f32 	%f1348, %f678, %f1348;

BB0_108:
	cvt.rn.f32.u32	%f679, %r72;
	mul.f32 	%f680, %f104, %f1346;
	mul.f32 	%f1368, %f679, %f680;
	mul.f32 	%f681, %f105, %f1347;
	mul.f32 	%f1369, %f679, %f681;
	mul.f32 	%f682, %f106, %f1348;
	mul.f32 	%f1370, %f679, %f682;
	bra.uni 	BB0_160;

BB0_119:
	mov.u32 	%r750, %r151;
	mov.u32 	%r751, %r160;

BB0_121:
	clz.b32 	%r753, %r749;
	setp.eq.s32	%p82, %r753, 0;
	shl.b32 	%r518, %r749, %r753;
	sub.s32 	%r520, %r385, %r753;
	shr.u32 	%r521, %r751, %r520;
	add.s32 	%r522, %r521, %r518;
	selp.b32	%r169, %r749, %r522, %p82;
	mov.u32 	%r523, -921707870;
	mul.hi.u32 	%r752, %r169, %r523;
	setp.eq.s32	%p83, %r151, 0;
	neg.s32 	%r524, %r161;
	selp.b32	%r754, %r161, %r524, %p83;
	setp.lt.s32	%p84, %r752, 1;
	@%p84 bra 	BB0_123;

	mul.lo.s32 	%r525, %r169, -921707870;
	shr.u32 	%r526, %r525, 31;
	shl.b32 	%r527, %r752, 1;
	add.s32 	%r752, %r526, %r527;
	add.s32 	%r753, %r753, 1;

BB0_123:
	mov.u32 	%r528, 126;
	sub.s32 	%r529, %r528, %r753;
	shl.b32 	%r530, %r529, 23;
	add.s32 	%r531, %r752, 1;
	shr.u32 	%r532, %r531, 7;
	add.s32 	%r533, %r532, 1;
	shr.u32 	%r534, %r533, 1;
	add.s32 	%r535, %r534, %r530;
	or.b32  	%r536, %r535, %r750;
	mov.b32 	 %f1353, %r536;

BB0_124:
	mul.rn.f32 	%f188, %f1353, %f1353;
	add.s32 	%r177, %r754, 1;
	and.b32  	%r178, %r177, 1;
	setp.eq.s32	%p85, %r178, 0;
	@%p85 bra 	BB0_126;

	mov.f32 	%f717, 0fBAB6061A;
	mov.f32 	%f718, 0f37CCF5CE;
	fma.rn.f32 	%f1354, %f718, %f188, %f717;
	bra.uni 	BB0_127;

BB0_126:
	mov.f32 	%f719, 0f3C08839E;
	mov.f32 	%f720, 0fB94CA1F9;
	fma.rn.f32 	%f1354, %f720, %f188, %f719;

BB0_127:
	@%p85 bra 	BB0_129;

	mov.f32 	%f721, 0f3D2AAAA5;
	fma.rn.f32 	%f722, %f1354, %f188, %f721;
	mov.f32 	%f723, 0fBF000000;
	fma.rn.f32 	%f1355, %f722, %f188, %f723;
	bra.uni 	BB0_130;

BB0_129:
	mov.f32 	%f724, 0fBE2AAAA3;
	fma.rn.f32 	%f725, %f1354, %f188, %f724;
	mov.f32 	%f726, 0f00000000;
	fma.rn.f32 	%f1355, %f725, %f188, %f726;

BB0_130:
	fma.rn.f32 	%f1356, %f1355, %f1353, %f1353;
	@%p85 bra 	BB0_132;

	mov.f32 	%f727, 0f3F800000;
	fma.rn.f32 	%f1356, %f1355, %f188, %f727;

BB0_132:
	and.b32  	%r537, %r177, 2;
	setp.eq.s32	%p88, %r537, 0;
	@%p88 bra 	BB0_134;

	mov.f32 	%f728, 0f00000000;
	mov.f32 	%f729, 0fBF800000;
	fma.rn.f32 	%f1356, %f1356, %f729, %f728;

BB0_134:
	@%p76 bra 	BB0_136;

	mov.f32 	%f730, 0f00000000;
	mul.rn.f32 	%f1358, %f1358, %f730;

BB0_136:
	mul.f32 	%f731, %f1358, 0f3F22F983;
	cvt.rni.s32.f32	%r764, %f731;
	cvt.rn.f32.s32	%f732, %r764;
	neg.f32 	%f733, %f732;
	fma.rn.f32 	%f735, %f733, %f711, %f1358;
	fma.rn.f32 	%f737, %f733, %f713, %f735;
	fma.rn.f32 	%f1359, %f733, %f715, %f737;
	abs.f32 	%f739, %f1358;
	setp.leu.f32	%p90, %f739, 0f47CE4780;
	@%p90 bra 	BB0_147;

	mov.b32 	 %r180, %f1358;
	shr.u32 	%r181, %r180, 23;
	shl.b32 	%r540, %r180, 8;
	or.b32  	%r182, %r540, -2147483648;
	mov.u32 	%r756, 0;
	mov.u64 	%rd240, __cudart_i2opi_f;
	mov.u32 	%r755, -6;
	mov.u64 	%rd241, %rd28;

BB0_138:
	.pragma "nounroll";
	ld.const.u32 	%r543, [%rd240];
	// inline asm
	{
	mad.lo.cc.u32   %r541, %r543, %r182, %r756;
	madc.hi.u32     %r756, %r543, %r182,  0;
	}
	// inline asm
	st.local.u32 	[%rd241], %r541;
	add.s64 	%rd241, %rd241, 4;
	add.s64 	%rd240, %rd240, 4;
	add.s32 	%r755, %r755, 1;
	setp.ne.s32	%p91, %r755, 0;
	@%p91 bra 	BB0_138;

	and.b32  	%r546, %r181, 255;
	add.s32 	%r547, %r546, -128;
	shr.u32 	%r548, %r547, 5;
	and.b32  	%r187, %r180, -2147483648;
	st.local.u32 	[%rd29], %r756;
	mov.u32 	%r549, 6;
	sub.s32 	%r550, %r549, %r548;
	mul.wide.s32 	%rd158, %r550, 4;
	add.s64 	%rd39, %rd28, %rd158;
	ld.local.u32 	%r757, [%rd39];
	ld.local.u32 	%r758, [%rd39+-4];
	and.b32  	%r190, %r181, 31;
	setp.eq.s32	%p92, %r190, 0;
	@%p92 bra 	BB0_141;

	sub.s32 	%r552, %r385, %r190;
	shr.u32 	%r553, %r758, %r552;
	shl.b32 	%r554, %r757, %r190;
	add.s32 	%r757, %r553, %r554;
	ld.local.u32 	%r555, [%rd39+-8];
	shr.u32 	%r556, %r555, %r552;
	shl.b32 	%r557, %r758, %r190;
	add.s32 	%r758, %r556, %r557;

BB0_141:
	shr.u32 	%r558, %r758, 30;
	shl.b32 	%r559, %r757, 2;
	add.s32 	%r759, %r558, %r559;
	shl.b32 	%r196, %r758, 2;
	shr.u32 	%r560, %r759, 31;
	shr.u32 	%r561, %r757, 30;
	add.s32 	%r197, %r560, %r561;
	setp.eq.s32	%p93, %r560, 0;
	@%p93 bra 	BB0_142;

	not.b32 	%r562, %r759;
	neg.s32 	%r761, %r196;
	setp.eq.s32	%p94, %r196, 0;
	selp.u32	%r563, 1, 0, %p94;
	add.s32 	%r759, %r563, %r562;
	xor.b32  	%r760, %r187, -2147483648;
	bra.uni 	BB0_144;

BB0_142:
	mov.u32 	%r760, %r187;
	mov.u32 	%r761, %r196;

BB0_144:
	clz.b32 	%r763, %r759;
	setp.eq.s32	%p95, %r763, 0;
	shl.b32 	%r564, %r759, %r763;
	sub.s32 	%r566, %r385, %r763;
	shr.u32 	%r567, %r761, %r566;
	add.s32 	%r568, %r567, %r564;
	selp.b32	%r205, %r759, %r568, %p95;
	mov.u32 	%r569, -921707870;
	mul.hi.u32 	%r762, %r205, %r569;
	setp.eq.s32	%p96, %r187, 0;
	neg.s32 	%r570, %r197;
	selp.b32	%r764, %r197, %r570, %p96;
	setp.lt.s32	%p97, %r762, 1;
	@%p97 bra 	BB0_146;

	mul.lo.s32 	%r571, %r205, -921707870;
	shr.u32 	%r572, %r571, 31;
	shl.b32 	%r573, %r762, 1;
	add.s32 	%r762, %r572, %r573;
	add.s32 	%r763, %r763, 1;

BB0_146:
	mov.u32 	%r574, 126;
	sub.s32 	%r575, %r574, %r763;
	shl.b32 	%r576, %r575, 23;
	add.s32 	%r577, %r762, 1;
	shr.u32 	%r578, %r577, 7;
	add.s32 	%r579, %r578, 1;
	shr.u32 	%r580, %r579, 1;
	add.s32 	%r581, %r580, %r576;
	or.b32  	%r582, %r581, %r760;
	mov.b32 	 %f1359, %r582;

BB0_147:
	mul.rn.f32 	%f205, %f1359, %f1359;
	and.b32  	%r213, %r764, 1;
	setp.eq.s32	%p98, %r213, 0;
	@%p98 bra 	BB0_149;

	mov.f32 	%f740, 0fBAB6061A;
	mov.f32 	%f741, 0f37CCF5CE;
	fma.rn.f32 	%f1360, %f741, %f205, %f740;
	bra.uni 	BB0_150;

BB0_149:
	mov.f32 	%f742, 0f3C08839E;
	mov.f32 	%f743, 0fB94CA1F9;
	fma.rn.f32 	%f1360, %f743, %f205, %f742;

BB0_150:
	@%p98 bra 	BB0_152;

	mov.f32 	%f744, 0f3D2AAAA5;
	fma.rn.f32 	%f745, %f1360, %f205, %f744;
	mov.f32 	%f746, 0fBF000000;
	fma.rn.f32 	%f1361, %f745, %f205, %f746;
	bra.uni 	BB0_153;

BB0_152:
	mov.f32 	%f747, 0fBE2AAAA3;
	fma.rn.f32 	%f748, %f1360, %f205, %f747;
	mov.f32 	%f749, 0f00000000;
	fma.rn.f32 	%f1361, %f748, %f205, %f749;

BB0_153:
	fma.rn.f32 	%f1362, %f1361, %f1359, %f1359;
	@%p98 bra 	BB0_155;

	mov.f32 	%f750, 0f3F800000;
	fma.rn.f32 	%f1362, %f1361, %f205, %f750;

BB0_155:
	and.b32  	%r583, %r764, 2;
	setp.eq.s32	%p101, %r583, 0;
	@%p101 bra 	BB0_157;

	mov.f32 	%f751, 0f00000000;
	mov.f32 	%f752, 0fBF800000;
	fma.rn.f32 	%f1362, %f1362, %f752, %f751;

BB0_157:
	mul.f32 	%f761, %f180, %f1356;
	mul.f32 	%f762, %f761, %f761;
	mov.f32 	%f763, 0f3F800000;
	sub.f32 	%f764, %f763, %f762;
	mul.f32 	%f765, %f180, %f1362;
	mul.f32 	%f766, %f765, %f765;
	sub.f32 	%f767, %f764, %f766;
	mov.f32 	%f768, 0f00000000;
	max.f32 	%f769, %f768, %f767;
	sqrt.rn.f32 	%f770, %f769;
	mul.f32 	%f771, %f177, %f765;
	mul.f32 	%f772, %f178, %f765;
	mul.f32 	%f773, %f179, %f765;
	mul.f32 	%f774, %f102, %f179;
	mul.f32 	%f775, %f96, %f178;
	sub.f32 	%f776, %f775, %f774;
	fma.rn.f32 	%f777, %f776, %f761, %f771;
	mul.f32 	%f778, %f96, %f177;
	mul.f32 	%f779, %f101, %f179;
	sub.f32 	%f780, %f779, %f778;
	fma.rn.f32 	%f781, %f780, %f761, %f772;
	mul.f32 	%f782, %f101, %f178;
	mul.f32 	%f783, %f102, %f177;
	sub.f32 	%f784, %f783, %f782;
	fma.rn.f32 	%f785, %f784, %f761, %f773;
	fma.rn.f32 	%f786, %f101, %f770, %f777;
	fma.rn.f32 	%f787, %f102, %f770, %f781;
	fma.rn.f32 	%f788, %f96, %f770, %f785;
	add.f32 	%f789, %f101, %f786;
	add.f32 	%f790, %f102, %f787;
	add.f32 	%f791, %f96, %f788;
	mul.f32 	%f792, %f103, %f789;
	mul.f32 	%f793, %f103, %f790;
	mul.f32 	%f794, %f103, %f791;
	sub.f32 	%f795, %f792, %f101;
	sub.f32 	%f796, %f793, %f102;
	sub.f32 	%f797, %f794, %f96;
	mul.f32 	%f798, %f796, %f796;
	fma.rn.f32 	%f799, %f795, %f795, %f798;
	fma.rn.f32 	%f800, %f797, %f797, %f799;
	sqrt.rn.f32 	%f801, %f800;
	rcp.rn.f32 	%f802, %f801;
	mul.f32 	%f756, %f802, %f795;
	mul.f32 	%f757, %f802, %f796;
	mul.f32 	%f758, %f802, %f797;
	mul.f32 	%f803, %f72, 0f3456BF95;
	abs.f32 	%f804, %f803;
	mul.f32 	%f805, %f73, 0f3456BF95;
	abs.f32 	%f806, %f805;
	mul.f32 	%f807, %f74, 0f3456BF95;
	abs.f32 	%f808, %f807;
	max.f32 	%f809, %f804, %f806;
	max.f32 	%f810, %f809, %f808;
	max.f32 	%f759, %f810, %f545;
	add.u64 	%rd159, %SP, 28;
	cvta.to.local.u64 	%rd160, %rd159;
	mov.u32 	%r587, 1065353216;
	st.local.u32 	[%rd160], %r587;
	ld.global.u32 	%r584, [root];
	mov.f32 	%f760, 0f6C4ECB8F;
	mov.u32 	%r586, 4;
	// inline asm
	call _rt_trace_64, (%r584, %f72, %f73, %f74, %f756, %f757, %f758, %r384, %f759, %f760, %rd159, %r586);
	// inline asm
	ld.local.f32 	%f1364, [%rd160];

BB0_158:
	ld.global.u32 	%r588, [bounceFlag];
	setp.gt.s32	%p102, %r588, 0;
	mul.f32 	%f812, %f107, 0f42C80000;
	mul.f32 	%f813, %f176, %f1364;
	mul.f32 	%f814, %f812, %f813;
	selp.f32	%f815, %f814, %f813, %p102;
	mul.f32 	%f1365, %f104, %f815;
	mul.f32 	%f1366, %f105, %f815;
	mul.f32 	%f1367, %f106, %f815;

BB0_159:
	cvt.rn.f32.u32	%f816, %r72;
	mul.f32 	%f1368, %f816, %f1365;
	mul.f32 	%f1369, %f816, %f1366;
	mul.f32 	%f1370, %f816, %f1367;

BB0_160:
	mov.u64 	%rd166, localLights;
	cvta.global.u64 	%rd165, %rd166;
	mov.u32 	%r590, 96;
	// inline asm
	call (%rd161, %rd162, %rd163, %rd164), _rt_buffer_get_size_64, (%rd165, %r384, %r590);
	// inline asm
	cvt.u32.u64	%r591, %rd161;
	setp.eq.s32	%p103, %r591, 0;
	@%p103 bra 	BB0_186;

	ld.global.f32 	%f824, [cameraPos];
	sub.f32 	%f821, %f72, %f824;
	ld.global.f32 	%f825, [cameraPos+4];
	sub.f32 	%f822, %f73, %f825;
	ld.global.f32 	%f826, [cameraPos+8];
	sub.f32 	%f823, %f74, %f826;
	ld.global.u32 	%r592, [tileCubemap];
	mov.u32 	%r593, 6;
	mov.u32 	%r594, 0;
	// inline asm
	call (%f817, %f818, %f819, %f820), _rt_texture_get_base_id, (%r592, %r593, %f821, %f822, %f823, %r594);
	// inline asm
	mov.b32 	 %r214, %f818;
	setp.eq.s32	%p104, %r214, 0;
	@%p104 bra 	BB0_186;

	mov.b32 	 %r599, %f817;
	cvt.rn.f32.u32	%f235, %r214;
	mul.f32 	%f829, %f3, %f235;
	cvt.rzi.u32.f32	%r600, %f829;
	add.s32 	%r601, %r214, -1;
	min.u32 	%r602, %r600, %r601;
	add.s32 	%r603, %r602, %r599;
	cvt.u64.u32	%rd169, %r603;
	mov.u64 	%rd179, localLightIndices;
	cvta.global.u64 	%rd168, %rd179;
	mov.u32 	%r596, 4;
	mov.u64 	%rd178, 0;
	// inline asm
	call (%rd167), _rt_buffer_get_64, (%rd168, %r384, %r596, %rd169, %rd178, %rd178, %rd178);
	// inline asm
	ld.u32 	%rd175, [%rd167];
	// inline asm
	call (%rd173), _rt_buffer_get_64, (%rd165, %r384, %r590, %rd175, %rd178, %rd178, %rd178);
	// inline asm
	ld.v4.f32 	{%f830, %f831, %f832, %f833}, [%rd173+80];
	ld.v4.f32 	{%f834, %f835, %f836, %f837}, [%rd173+64];
	ld.v4.f32 	{%f838, %f839, %f840, %f841}, [%rd173+48];
	ld.v4.f32 	{%f1374, %f1375, %f1376, %f845}, [%rd173+32];
	ld.v4.f32 	{%f846, %f847, %f848, %f849}, [%rd173+16];
	ld.v4.f32 	{%f850, %f851, %f852, %f853}, [%rd173];
	sub.f32 	%f854, %f851, %f72;
	sub.f32 	%f855, %f852, %f73;
	sub.f32 	%f856, %f853, %f74;
	mul.f32 	%f857, %f855, %f855;
	fma.rn.f32 	%f858, %f854, %f854, %f857;
	fma.rn.f32 	%f859, %f856, %f856, %f858;
	sqrt.rn.f32 	%f263, %f859;
	rcp.rn.f32 	%f860, %f263;
	mul.f32 	%f264, %f854, %f860;
	mul.f32 	%f265, %f855, %f860;
	mul.f32 	%f266, %f856, %f860;
	mul.f32 	%f267, %f849, %f263;
	mov.f32 	%f864, 0f40800000;
	abs.f32 	%f269, %f267;
	setp.lt.f32	%p105, %f269, 0f00800000;
	mul.f32 	%f866, %f269, 0f4B800000;
	selp.f32	%f867, 0fC3170000, 0fC2FE0000, %p105;
	selp.f32	%f868, %f866, %f269, %p105;
	mov.b32 	 %r604, %f868;
	and.b32  	%r605, %r604, 8388607;
	or.b32  	%r606, %r605, 1065353216;
	mov.b32 	 %f869, %r606;
	shr.u32 	%r607, %r604, 23;
	cvt.rn.f32.u32	%f870, %r607;
	add.f32 	%f871, %f867, %f870;
	setp.gt.f32	%p106, %f869, 0f3FB504F3;
	mul.f32 	%f872, %f869, 0f3F000000;
	add.f32 	%f873, %f871, 0f3F800000;
	selp.f32	%f874, %f872, %f869, %p106;
	selp.f32	%f875, %f873, %f871, %p106;
	add.f32 	%f876, %f874, 0fBF800000;
	add.f32 	%f828, %f874, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f827,%f828;
	// inline asm
	add.f32 	%f877, %f876, %f876;
	mul.f32 	%f878, %f827, %f877;
	mul.f32 	%f879, %f878, %f878;
	mov.f32 	%f880, 0f3C4CAF63;
	mov.f32 	%f881, 0f3B18F0FE;
	fma.rn.f32 	%f882, %f881, %f879, %f880;
	mov.f32 	%f883, 0f3DAAAABD;
	fma.rn.f32 	%f884, %f882, %f879, %f883;
	mul.rn.f32 	%f885, %f884, %f879;
	mul.rn.f32 	%f886, %f885, %f878;
	sub.f32 	%f887, %f876, %f878;
	neg.f32 	%f888, %f878;
	add.f32 	%f889, %f887, %f887;
	fma.rn.f32 	%f890, %f888, %f876, %f889;
	mul.rn.f32 	%f891, %f827, %f890;
	add.f32 	%f892, %f886, %f878;
	sub.f32 	%f893, %f878, %f892;
	add.f32 	%f894, %f886, %f893;
	add.f32 	%f895, %f891, %f894;
	add.f32 	%f896, %f892, %f895;
	sub.f32 	%f897, %f892, %f896;
	add.f32 	%f898, %f895, %f897;
	mov.f32 	%f899, 0f3F317200;
	mul.rn.f32 	%f900, %f875, %f899;
	mov.f32 	%f901, 0f35BFBE8E;
	mul.rn.f32 	%f902, %f875, %f901;
	add.f32 	%f903, %f900, %f896;
	sub.f32 	%f904, %f900, %f903;
	add.f32 	%f905, %f896, %f904;
	add.f32 	%f906, %f898, %f905;
	add.f32 	%f907, %f902, %f906;
	add.f32 	%f908, %f903, %f907;
	sub.f32 	%f909, %f903, %f908;
	add.f32 	%f910, %f907, %f909;
	mul.rn.f32 	%f270, %f864, %f908;
	neg.f32 	%f911, %f270;
	fma.rn.f32 	%f912, %f864, %f908, %f911;
	fma.rn.f32 	%f913, %f864, %f910, %f912;
	mov.f32 	%f914, 0f00000000;
	fma.rn.f32 	%f271, %f914, %f908, %f913;
	add.rn.f32 	%f272, %f270, %f271;
	mov.b32 	 %r608, %f272;
	setp.eq.s32	%p1, %r608, 1118925336;
	add.s32 	%r609, %r608, -1;
	mov.b32 	 %f915, %r609;
	selp.f32	%f916, %f915, %f272, %p1;
	mul.f32 	%f917, %f916, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f918, %f917;
	mov.f32 	%f919, 0fBF317200;
	fma.rn.f32 	%f920, %f918, %f919, %f916;
	mov.f32 	%f921, 0fB5BFBE8E;
	fma.rn.f32 	%f922, %f918, %f921, %f920;
	mul.f32 	%f923, %f922, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f924, %f923;
	add.f32 	%f925, %f918, 0f00000000;
	ex2.approx.f32 	%f926, %f925;
	mul.f32 	%f927, %f924, %f926;
	setp.lt.f32	%p107, %f916, 0fC2D20000;
	selp.f32	%f928, 0f00000000, %f927, %p107;
	setp.gt.f32	%p108, %f916, 0f42D20000;
	selp.f32	%f1371, 0f7F800000, %f928, %p108;
	setp.eq.f32	%p109, %f1371, 0f7F800000;
	@%p109 bra 	BB0_164;

	neg.f32 	%f929, %f272;
	add.rn.f32 	%f930, %f270, %f929;
	add.rn.f32 	%f931, %f930, %f271;
	add.f32 	%f932, %f931, 0f37000000;
	selp.f32	%f933, %f932, %f931, %p1;
	fma.rn.f32 	%f1371, %f1371, %f933, %f1371;

BB0_164:
	mov.f32 	%f1303, 0f40000000;
	cvt.rzi.f32.f32	%f1302, %f1303;
	add.f32 	%f1301, %f1302, %f1302;
	mov.f32 	%f1300, 0f40800000;
	sub.f32 	%f1299, %f1300, %f1301;
	abs.f32 	%f1298, %f1299;
	setp.lt.f32	%p110, %f267, 0f00000000;
	setp.eq.f32	%p111, %f1298, 0f3F800000;
	and.pred  	%p2, %p110, %p111;
	mov.b32 	 %r610, %f1371;
	xor.b32  	%r611, %r610, -2147483648;
	mov.b32 	 %f934, %r611;
	selp.f32	%f1373, %f934, %f1371, %p2;
	setp.eq.f32	%p112, %f267, 0f00000000;
	@%p112 bra 	BB0_167;
	bra.uni 	BB0_165;

BB0_167:
	add.f32 	%f937, %f267, %f267;
	selp.f32	%f1373, %f937, 0f00000000, %p111;
	bra.uni 	BB0_168;

BB0_165:
	setp.geu.f32	%p113, %f267, 0f00000000;
	@%p113 bra 	BB0_168;

	mov.f32 	%f1306, 0f40800000;
	cvt.rzi.f32.f32	%f936, %f1306;
	setp.neu.f32	%p114, %f936, 0f40800000;
	selp.f32	%f1373, 0f7FFFFFFF, %f1373, %p114;

BB0_168:
	add.f32 	%f938, %f269, 0f40800000;
	mov.b32 	 %r612, %f938;
	setp.lt.s32	%p116, %r612, 2139095040;
	@%p116 bra 	BB0_173;

	setp.gtu.f32	%p117, %f269, 0f7F800000;
	@%p117 bra 	BB0_172;
	bra.uni 	BB0_170;

BB0_172:
	add.f32 	%f1373, %f267, 0f40800000;
	bra.uni 	BB0_173;

BB0_170:
	setp.neu.f32	%p118, %f269, 0f7F800000;
	@%p118 bra 	BB0_173;

	selp.f32	%f1373, 0fFF800000, 0f7F800000, %p2;

BB0_173:
	add.u64 	%rd227, %SP, 0;
	cvta.to.local.u64 	%rd226, %rd227;
	add.s64 	%rd225, %rd226, 12;
	mul.f32 	%f939, %f847, %f263;
	mov.f32 	%f1378, 0f3F800000;
	sub.f32 	%f941, %f1378, %f1373;
	setp.eq.f32	%p119, %f267, 0f3F800000;
	selp.f32	%f942, 0f00000000, %f941, %p119;
	cvt.sat.f32.f32	%f943, %f942;
	fma.rn.f32 	%f944, %f939, %f939, %f848;
	div.rn.f32 	%f1377, %f943, %f944;
	ld.local.f32 	%f945, [%rd225+-12];
	ld.local.f32 	%f946, [%rd225+-8];
	mul.f32 	%f947, %f265, %f946;
	fma.rn.f32 	%f948, %f264, %f945, %f947;
	ld.local.f32 	%f949, [%rd225+-4];
	fma.rn.f32 	%f950, %f266, %f949, %f948;
	cvt.sat.f32.f32	%f299, %f950;
	setp.eq.f32	%p120, %f850, 0f3F800000;
	@%p120 bra 	BB0_179;
	bra.uni 	BB0_174;

BB0_179:
	setp.leu.f32	%p124, %f845, 0f00000000;
	@%p124 bra 	BB0_181;

	mov.u32 	%r704, 2;
	mul.f32 	%f981, %f830, %f264;
	mul.f32 	%f982, %f831, %f265;
	neg.f32 	%f983, %f982;
	sub.f32 	%f984, %f983, %f981;
	mul.f32 	%f985, %f832, %f266;
	sub.f32 	%f986, %f984, %f985;
	setp.gt.f32	%p125, %f986, 0f00000000;
	selp.f32	%f987, 0f3F800000, 0f00000000, %p125;
	mul.f32 	%f988, %f839, %f265;
	fma.rn.f32 	%f989, %f838, %f264, %f988;
	mul.f32 	%f990, %f835, %f265;
	fma.rn.f32 	%f991, %f834, %f264, %f990;
	fma.rn.f32 	%f992, %f840, %f266, %f989;
	fma.rn.f32 	%f993, %f836, %f266, %f991;
	fma.rn.f32 	%f977, %f841, %f992, 0f3F000000;
	fma.rn.f32 	%f978, %f841, %f993, 0f3F000000;
	cvt.rzi.s32.f32	%r616, %f845;
	mov.f32 	%f980, 0f00000000;
	// inline asm
	call (%f973, %f974, %f975, %f976), _rt_texture_get_f_id, (%r616, %r704, %f977, %f978, %f980, %f980);
	// inline asm
	mul.f32 	%f994, %f987, %f973;
	mul.f32 	%f995, %f987, %f974;
	mul.f32 	%f996, %f987, %f975;
	mul.f32 	%f1374, %f1374, %f994;
	mul.f32 	%f1375, %f1375, %f995;
	mul.f32 	%f1376, %f1376, %f996;
	bra.uni 	BB0_181;

BB0_174:
	setp.eq.f32	%p121, %f850, 0f40000000;
	@%p121 bra 	BB0_177;
	bra.uni 	BB0_175;

BB0_177:
	setp.leu.f32	%p123, %f845, 0f00000000;
	@%p123 bra 	BB0_181;

	mov.u32 	%r703, 0;
	mov.u32 	%r702, 6;
	mul.f32 	%f967, %f839, %f265;
	fma.rn.f32 	%f968, %f838, %f264, %f967;
	mul.f32 	%f969, %f835, %f265;
	fma.rn.f32 	%f970, %f834, %f264, %f969;
	mul.f32 	%f971, %f831, %f265;
	fma.rn.f32 	%f972, %f830, %f264, %f971;
	fma.rn.f32 	%f964, %f840, %f266, %f968;
	fma.rn.f32 	%f965, %f836, %f266, %f970;
	fma.rn.f32 	%f966, %f832, %f266, %f972;
	cvt.rzi.s32.f32	%r613, %f845;
	// inline asm
	call (%f960, %f961, %f962, %f963), _rt_texture_get_base_id, (%r613, %r702, %f964, %f965, %f966, %r703);
	// inline asm
	mul.f32 	%f1374, %f1374, %f960;
	mul.f32 	%f1375, %f1375, %f961;
	mul.f32 	%f1376, %f1376, %f962;
	bra.uni 	BB0_181;

BB0_175:
	setp.neu.f32	%p122, %f850, 0f40800000;
	@%p122 bra 	BB0_181;

	mul.f32 	%f951, %f830, %f264;
	mul.f32 	%f952, %f831, %f265;
	neg.f32 	%f953, %f952;
	sub.f32 	%f954, %f953, %f951;
	mul.f32 	%f955, %f832, %f266;
	sub.f32 	%f956, %f954, %f955;
	fma.rn.f32 	%f957, %f845, %f956, %f841;
	cvt.sat.f32.f32	%f958, %f957;
	mul.f32 	%f959, %f958, %f958;
	mul.f32 	%f1377, %f1377, %f959;

BB0_181:
	mov.f32 	%f1379, 0f00000000;
	max.f32 	%f1000, %f1374, %f1375;
	max.f32 	%f1001, %f1000, %f1376;
	mul.f32 	%f311, %f299, %f1377;
	mul.f32 	%f1002, %f311, %f1001;
	setp.lt.f32	%p126, %f1002, 0f3727C5AC;
	mov.f32 	%f1380, %f1379;
	mov.f32 	%f1381, %f1379;
	@%p126 bra 	BB0_185;

	add.u64 	%rd181, %SP, 32;
	cvta.to.local.u64 	%rd40, %rd181;
	mov.u32 	%r618, 1065353216;
	st.local.u32 	[%rd40], %r618;
	setp.leu.f32	%p127, %f833, 0f00000000;
	@%p127 bra 	BB0_184;

	mov.u32 	%r694, 4;
	mov.f32 	%f1305, 0f38D1B717;
	mov.u32 	%r693, 1;
	fma.rn.f32 	%f1012, %f1, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f1013, %f2, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f1014, %f3, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f1015, %f1012, %f846, %f851;
	fma.rn.f32 	%f1016, %f1013, %f846, %f852;
	fma.rn.f32 	%f1017, %f1014, %f846, %f853;
	sub.f32 	%f1018, %f1015, %f72;
	sub.f32 	%f1019, %f1016, %f73;
	sub.f32 	%f1020, %f1017, %f74;
	mul.f32 	%f1021, %f1019, %f1019;
	fma.rn.f32 	%f1022, %f1018, %f1018, %f1021;
	fma.rn.f32 	%f1023, %f1020, %f1020, %f1022;
	sqrt.rn.f32 	%f1011, %f1023;
	rcp.rn.f32 	%f1024, %f1011;
	mul.f32 	%f1007, %f1018, %f1024;
	mul.f32 	%f1008, %f1019, %f1024;
	mul.f32 	%f1009, %f1020, %f1024;
	mul.f32 	%f1025, %f72, 0f3456BF95;
	abs.f32 	%f1026, %f1025;
	mul.f32 	%f1027, %f73, 0f3456BF95;
	abs.f32 	%f1028, %f1027;
	mul.f32 	%f1029, %f74, 0f3456BF95;
	abs.f32 	%f1030, %f1029;
	max.f32 	%f1031, %f1026, %f1028;
	max.f32 	%f1032, %f1031, %f1030;
	max.f32 	%f1010, %f1032, %f1305;
	ld.global.u32 	%r619, [root];
	// inline asm
	call _rt_trace_64, (%r619, %f72, %f73, %f74, %f1007, %f1008, %f1009, %r693, %f1010, %f1011, %rd181, %r694);
	// inline asm
	ld.local.f32 	%f1378, [%rd40];

BB0_184:
	ld.global.u32 	%r622, [bounceFlag];
	setp.gt.s32	%p128, %r622, 0;
	mul.f32 	%f1034, %f311, %f1378;
	mul.f32 	%f1035, %f837, %f1034;
	selp.f32	%f1036, %f1035, %f1034, %p128;
	mul.f32 	%f1379, %f1374, %f1036;
	mul.f32 	%f1380, %f1375, %f1036;
	mul.f32 	%f1381, %f1376, %f1036;

BB0_185:
	fma.rn.f32 	%f1368, %f235, %f1379, %f1368;
	fma.rn.f32 	%f1369, %f235, %f1380, %f1369;
	fma.rn.f32 	%f1370, %f235, %f1381, %f1370;

BB0_186:
	mov.u64 	%rd229, GBufferAtten;
	cvta.global.u64 	%rd228, %rd229;
	mov.u32 	%r696, 12;
	mov.u32 	%r695, 2;
	abs.f32 	%f1037, %f1368;
	setp.gtu.f32	%p129, %f1037, 0f7F800000;
	selp.f32	%f1038, 0f00000000, %f1368, %p129;
	abs.f32 	%f1039, %f1369;
	setp.gtu.f32	%p130, %f1039, 0f7F800000;
	selp.f32	%f1040, 0f00000000, %f1369, %p130;
	abs.f32 	%f1041, %f1370;
	setp.gtu.f32	%p131, %f1041, 0f7F800000;
	selp.f32	%f1042, 0f00000000, %f1370, %p131;
	fma.rn.f32 	%f1391, %f1385, %f1038, %f1382;
	fma.rn.f32 	%f1392, %f1386, %f1040, %f1383;
	fma.rn.f32 	%f1393, %f1387, %f1042, %f1384;
	ld.global.v2.u32 	{%r627, %r628}, [pixelID];
	cvt.u64.u32	%rd185, %r627;
	cvt.u64.u32	%rd186, %r628;
	mov.u64 	%rd194, 0;
	// inline asm
	call (%rd183), _rt_buffer_get_64, (%rd228, %r695, %r696, %rd185, %rd186, %rd194, %rd194);
	// inline asm
	st.f32 	[%rd183+8], %f1387;
	st.f32 	[%rd183+4], %f1386;
	st.f32 	[%rd183], %f1385;
	ld.global.v2.u32 	{%r631, %r632}, [pixelID];
	cvt.u64.u32	%rd191, %r631;
	cvt.u64.u32	%rd192, %r632;
	mov.u64 	%rd196, accumBufferAdd;
	cvta.global.u64 	%rd190, %rd196;
	// inline asm
	call (%rd189), _rt_buffer_get_64, (%rd190, %r695, %r696, %rd191, %rd192, %rd194, %rd194);
	// inline asm
	ld.global.u32 	%r635, [bounceFlag];
	setp.eq.s32	%p132, %r635, 0;
	@%p132 bra 	BB0_188;

	ld.f32 	%f1043, [%rd189+8];
	ld.f32 	%f1044, [%rd189+4];
	ld.f32 	%f1045, [%rd189];
	add.f32 	%f1391, %f1391, %f1045;
	add.f32 	%f1392, %f1392, %f1044;
	add.f32 	%f1393, %f1393, %f1043;

BB0_188:
	mov.u32 	%r698, 12;
	mov.u32 	%r697, 2;
	ld.global.v2.u32 	{%r640, %r641}, [pixelID];
	cvt.u64.u32	%rd199, %r640;
	cvt.u64.u32	%rd200, %r641;
	// inline asm
	call (%rd197), _rt_buffer_get_64, (%rd190, %r697, %r698, %rd199, %rd200, %rd194, %rd194);
	// inline asm
	st.f32 	[%rd197+8], %f1393;
	st.f32 	[%rd197+4], %f1392;
	st.f32 	[%rd197], %f1391;
	ld.global.v2.u32 	{%r644, %r645}, [pixelID];
	cvt.u64.u32	%rd205, %r644;
	cvt.u64.u32	%rd206, %r645;
	mov.u64 	%rd210, accumBufferLerp;
	cvta.global.u64 	%rd204, %rd210;
	// inline asm
	call (%rd203), _rt_buffer_get_64, (%rd204, %r697, %r698, %rd205, %rd206, %rd194, %rd194);
	// inline asm
	ld.f32 	%f1046, [%rd203+8];
	ld.f32 	%f1047, [%rd203+4];
	ld.f32 	%f1048, [%rd203];
	sub.f32 	%f1049, %f1391, %f1048;
	sub.f32 	%f1050, %f1392, %f1047;
	sub.f32 	%f1051, %f1393, %f1046;
	ld.global.f32 	%f1052, [integration];
	fma.rn.f32 	%f341, %f1052, %f1049, %f1048;
	fma.rn.f32 	%f342, %f1052, %f1050, %f1047;
	fma.rn.f32 	%f343, %f1052, %f1051, %f1046;
	ld.global.u32 	%r648, [finalBounceFlag];
	setp.eq.s32	%p133, %r648, 0;
	@%p133 bra 	BB0_190;

	mov.u32 	%r700, 12;
	mov.u32 	%r699, 2;
	ld.global.v2.u32 	{%r651, %r652}, [pixelID];
	cvt.u64.u32	%rd213, %r651;
	cvt.u64.u32	%rd214, %r652;
	// inline asm
	call (%rd211), _rt_buffer_get_64, (%rd204, %r699, %r700, %rd213, %rd214, %rd194, %rd194);
	// inline asm
	st.f32 	[%rd211+8], %f343;
	st.f32 	[%rd211+4], %f342;
	st.f32 	[%rd211], %f341;

BB0_190:
	ld.global.v2.u32 	{%r655, %r656}, [pixelID];
	cvt.u64.u32	%rd42, %r655;
	ld.global.u32 	%r658, [resolution+4];
	add.s32 	%r659, %r658, -1;
	sub.s32 	%r215, %r659, %r656;
	ld.global.f32 	%f1055, [cameraExp];
	mul.f32 	%f344, %f341, %f1055;
	mul.f32 	%f345, %f342, %f1055;
	mul.f32 	%f346, %f343, %f1055;
	mov.f32 	%f1056, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f1057, %f1056;
	fma.rn.f32 	%f1058, %f1057, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f347, %f1058;
	abs.f32 	%f348, %f344;
	setp.lt.f32	%p134, %f348, 0f00800000;
	mul.f32 	%f1059, %f348, 0f4B800000;
	selp.f32	%f1060, 0fC3170000, 0fC2FE0000, %p134;
	selp.f32	%f1061, %f1059, %f348, %p134;
	mov.b32 	 %r661, %f1061;
	and.b32  	%r662, %r661, 8388607;
	or.b32  	%r663, %r662, 1065353216;
	mov.b32 	 %f1062, %r663;
	shr.u32 	%r664, %r661, 23;
	cvt.rn.f32.u32	%f1063, %r664;
	add.f32 	%f1064, %f1060, %f1063;
	setp.gt.f32	%p135, %f1062, 0f3FB504F3;
	mul.f32 	%f1065, %f1062, 0f3F000000;
	add.f32 	%f1066, %f1064, 0f3F800000;
	selp.f32	%f1067, %f1065, %f1062, %p135;
	selp.f32	%f1068, %f1066, %f1064, %p135;
	add.f32 	%f1069, %f1067, 0fBF800000;
	add.f32 	%f1054, %f1067, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1053,%f1054;
	// inline asm
	add.f32 	%f1070, %f1069, %f1069;
	mul.f32 	%f1071, %f1053, %f1070;
	mul.f32 	%f1072, %f1071, %f1071;
	mov.f32 	%f1073, 0f3C4CAF63;
	mov.f32 	%f1074, 0f3B18F0FE;
	fma.rn.f32 	%f1075, %f1074, %f1072, %f1073;
	mov.f32 	%f1076, 0f3DAAAABD;
	fma.rn.f32 	%f1077, %f1075, %f1072, %f1076;
	mul.rn.f32 	%f1078, %f1077, %f1072;
	mul.rn.f32 	%f1079, %f1078, %f1071;
	sub.f32 	%f1080, %f1069, %f1071;
	neg.f32 	%f1081, %f1071;
	add.f32 	%f1082, %f1080, %f1080;
	fma.rn.f32 	%f1083, %f1081, %f1069, %f1082;
	mul.rn.f32 	%f1084, %f1053, %f1083;
	add.f32 	%f1085, %f1079, %f1071;
	sub.f32 	%f1086, %f1071, %f1085;
	add.f32 	%f1087, %f1079, %f1086;
	add.f32 	%f1088, %f1084, %f1087;
	add.f32 	%f1089, %f1085, %f1088;
	sub.f32 	%f1090, %f1085, %f1089;
	add.f32 	%f1091, %f1088, %f1090;
	mov.f32 	%f1092, 0f3F317200;
	mul.rn.f32 	%f1093, %f1068, %f1092;
	mov.f32 	%f1094, 0f35BFBE8E;
	mul.rn.f32 	%f1095, %f1068, %f1094;
	add.f32 	%f1096, %f1093, %f1089;
	sub.f32 	%f1097, %f1093, %f1096;
	add.f32 	%f1098, %f1089, %f1097;
	add.f32 	%f1099, %f1091, %f1098;
	add.f32 	%f1100, %f1095, %f1099;
	add.f32 	%f1101, %f1096, %f1100;
	sub.f32 	%f1102, %f1096, %f1101;
	add.f32 	%f1103, %f1100, %f1102;
	mov.f32 	%f1104, 0f3EE8BA2E;
	mul.rn.f32 	%f1105, %f1104, %f1101;
	neg.f32 	%f1106, %f1105;
	fma.rn.f32 	%f1107, %f1104, %f1101, %f1106;
	fma.rn.f32 	%f1108, %f1104, %f1103, %f1107;
	mov.f32 	%f1109, 0f00000000;
	fma.rn.f32 	%f1110, %f1109, %f1101, %f1108;
	add.rn.f32 	%f1111, %f1105, %f1110;
	neg.f32 	%f1112, %f1111;
	add.rn.f32 	%f1113, %f1105, %f1112;
	add.rn.f32 	%f1114, %f1113, %f1110;
	mov.b32 	 %r665, %f1111;
	setp.eq.s32	%p136, %r665, 1118925336;
	add.s32 	%r666, %r665, -1;
	mov.b32 	 %f1115, %r666;
	add.f32 	%f1116, %f1114, 0f37000000;
	selp.f32	%f1117, %f1115, %f1111, %p136;
	selp.f32	%f349, %f1116, %f1114, %p136;
	mul.f32 	%f1118, %f1117, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1119, %f1118;
	mov.f32 	%f1120, 0fBF317200;
	fma.rn.f32 	%f1121, %f1119, %f1120, %f1117;
	mov.f32 	%f1122, 0fB5BFBE8E;
	fma.rn.f32 	%f1123, %f1119, %f1122, %f1121;
	mul.f32 	%f1124, %f1123, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1125, %f1124;
	add.f32 	%f1126, %f1119, 0f00000000;
	ex2.approx.f32 	%f1127, %f1126;
	mul.f32 	%f1128, %f1125, %f1127;
	setp.lt.f32	%p137, %f1117, 0fC2D20000;
	selp.f32	%f1129, 0f00000000, %f1128, %p137;
	setp.gt.f32	%p138, %f1117, 0f42D20000;
	selp.f32	%f1394, 0f7F800000, %f1129, %p138;
	setp.eq.f32	%p139, %f1394, 0f7F800000;
	@%p139 bra 	BB0_192;

	fma.rn.f32 	%f1394, %f1394, %f349, %f1394;

BB0_192:
	setp.lt.f32	%p140, %f344, 0f00000000;
	setp.eq.f32	%p141, %f347, 0f3F800000;
	and.pred  	%p3, %p140, %p141;
	mov.b32 	 %r667, %f1394;
	xor.b32  	%r668, %r667, -2147483648;
	mov.b32 	 %f1130, %r668;
	selp.f32	%f1396, %f1130, %f1394, %p3;
	setp.eq.f32	%p142, %f344, 0f00000000;
	@%p142 bra 	BB0_195;
	bra.uni 	BB0_193;

BB0_195:
	add.f32 	%f1133, %f344, %f344;
	selp.f32	%f1396, %f1133, 0f00000000, %p141;
	bra.uni 	BB0_196;

BB0_193:
	setp.geu.f32	%p143, %f344, 0f00000000;
	@%p143 bra 	BB0_196;

	cvt.rzi.f32.f32	%f1132, %f1104;
	setp.neu.f32	%p144, %f1132, 0f3EE8BA2E;
	selp.f32	%f1396, 0f7FFFFFFF, %f1396, %p144;

BB0_196:
	add.f32 	%f1134, %f348, 0f3EE8BA2E;
	mov.b32 	 %r669, %f1134;
	setp.lt.s32	%p146, %r669, 2139095040;
	@%p146 bra 	BB0_201;

	setp.gtu.f32	%p147, %f348, 0f7F800000;
	@%p147 bra 	BB0_200;
	bra.uni 	BB0_198;

BB0_200:
	add.f32 	%f1396, %f344, 0f3EE8BA2E;
	bra.uni 	BB0_201;

BB0_198:
	setp.neu.f32	%p148, %f348, 0f7F800000;
	@%p148 bra 	BB0_201;

	selp.f32	%f1396, 0fFF800000, 0f7F800000, %p3;

BB0_201:
	setp.eq.f32	%p149, %f344, 0f3F800000;
	selp.f32	%f1137, 0f3F800000, %f1396, %p149;
	cvt.sat.f32.f32	%f360, %f1137;
	abs.f32 	%f361, %f345;
	setp.lt.f32	%p150, %f361, 0f00800000;
	mul.f32 	%f1138, %f361, 0f4B800000;
	selp.f32	%f1139, 0fC3170000, 0fC2FE0000, %p150;
	selp.f32	%f1140, %f1138, %f361, %p150;
	mov.b32 	 %r670, %f1140;
	and.b32  	%r671, %r670, 8388607;
	or.b32  	%r672, %r671, 1065353216;
	mov.b32 	 %f1141, %r672;
	shr.u32 	%r673, %r670, 23;
	cvt.rn.f32.u32	%f1142, %r673;
	add.f32 	%f1143, %f1139, %f1142;
	setp.gt.f32	%p151, %f1141, 0f3FB504F3;
	mul.f32 	%f1144, %f1141, 0f3F000000;
	add.f32 	%f1145, %f1143, 0f3F800000;
	selp.f32	%f1146, %f1144, %f1141, %p151;
	selp.f32	%f1147, %f1145, %f1143, %p151;
	add.f32 	%f1148, %f1146, 0fBF800000;
	add.f32 	%f1136, %f1146, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1135,%f1136;
	// inline asm
	add.f32 	%f1149, %f1148, %f1148;
	mul.f32 	%f1150, %f1135, %f1149;
	mul.f32 	%f1151, %f1150, %f1150;
	fma.rn.f32 	%f1154, %f1074, %f1151, %f1073;
	fma.rn.f32 	%f1156, %f1154, %f1151, %f1076;
	mul.rn.f32 	%f1157, %f1156, %f1151;
	mul.rn.f32 	%f1158, %f1157, %f1150;
	sub.f32 	%f1159, %f1148, %f1150;
	neg.f32 	%f1160, %f1150;
	add.f32 	%f1161, %f1159, %f1159;
	fma.rn.f32 	%f1162, %f1160, %f1148, %f1161;
	mul.rn.f32 	%f1163, %f1135, %f1162;
	add.f32 	%f1164, %f1158, %f1150;
	sub.f32 	%f1165, %f1150, %f1164;
	add.f32 	%f1166, %f1158, %f1165;
	add.f32 	%f1167, %f1163, %f1166;
	add.f32 	%f1168, %f1164, %f1167;
	sub.f32 	%f1169, %f1164, %f1168;
	add.f32 	%f1170, %f1167, %f1169;
	mul.rn.f32 	%f1172, %f1147, %f1092;
	mul.rn.f32 	%f1174, %f1147, %f1094;
	add.f32 	%f1175, %f1172, %f1168;
	sub.f32 	%f1176, %f1172, %f1175;
	add.f32 	%f1177, %f1168, %f1176;
	add.f32 	%f1178, %f1170, %f1177;
	add.f32 	%f1179, %f1174, %f1178;
	add.f32 	%f1180, %f1175, %f1179;
	sub.f32 	%f1181, %f1175, %f1180;
	add.f32 	%f1182, %f1179, %f1181;
	mul.rn.f32 	%f1184, %f1104, %f1180;
	neg.f32 	%f1185, %f1184;
	fma.rn.f32 	%f1186, %f1104, %f1180, %f1185;
	fma.rn.f32 	%f1187, %f1104, %f1182, %f1186;
	fma.rn.f32 	%f1189, %f1109, %f1180, %f1187;
	add.rn.f32 	%f1190, %f1184, %f1189;
	neg.f32 	%f1191, %f1190;
	add.rn.f32 	%f1192, %f1184, %f1191;
	add.rn.f32 	%f1193, %f1192, %f1189;
	mov.b32 	 %r674, %f1190;
	setp.eq.s32	%p152, %r674, 1118925336;
	add.s32 	%r675, %r674, -1;
	mov.b32 	 %f1194, %r675;
	add.f32 	%f1195, %f1193, 0f37000000;
	selp.f32	%f1196, %f1194, %f1190, %p152;
	selp.f32	%f362, %f1195, %f1193, %p152;
	mul.f32 	%f1197, %f1196, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1198, %f1197;
	fma.rn.f32 	%f1200, %f1198, %f1120, %f1196;
	fma.rn.f32 	%f1202, %f1198, %f1122, %f1200;
	mul.f32 	%f1203, %f1202, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1204, %f1203;
	add.f32 	%f1205, %f1198, 0f00000000;
	ex2.approx.f32 	%f1206, %f1205;
	mul.f32 	%f1207, %f1204, %f1206;
	setp.lt.f32	%p153, %f1196, 0fC2D20000;
	selp.f32	%f1208, 0f00000000, %f1207, %p153;
	setp.gt.f32	%p154, %f1196, 0f42D20000;
	selp.f32	%f1397, 0f7F800000, %f1208, %p154;
	setp.eq.f32	%p155, %f1397, 0f7F800000;
	@%p155 bra 	BB0_203;

	fma.rn.f32 	%f1397, %f1397, %f362, %f1397;

BB0_203:
	setp.lt.f32	%p156, %f345, 0f00000000;
	and.pred  	%p4, %p156, %p141;
	mov.b32 	 %r676, %f1397;
	xor.b32  	%r677, %r676, -2147483648;
	mov.b32 	 %f1209, %r677;
	selp.f32	%f1399, %f1209, %f1397, %p4;
	setp.eq.f32	%p158, %f345, 0f00000000;
	@%p158 bra 	BB0_206;
	bra.uni 	BB0_204;

BB0_206:
	add.f32 	%f1212, %f345, %f345;
	selp.f32	%f1399, %f1212, 0f00000000, %p141;
	bra.uni 	BB0_207;

BB0_204:
	setp.geu.f32	%p159, %f345, 0f00000000;
	@%p159 bra 	BB0_207;

	cvt.rzi.f32.f32	%f1211, %f1104;
	setp.neu.f32	%p160, %f1211, 0f3EE8BA2E;
	selp.f32	%f1399, 0f7FFFFFFF, %f1399, %p160;

BB0_207:
	add.f32 	%f1213, %f361, 0f3EE8BA2E;
	mov.b32 	 %r678, %f1213;
	setp.lt.s32	%p162, %r678, 2139095040;
	@%p162 bra 	BB0_212;

	setp.gtu.f32	%p163, %f361, 0f7F800000;
	@%p163 bra 	BB0_211;
	bra.uni 	BB0_209;

BB0_211:
	add.f32 	%f1399, %f345, 0f3EE8BA2E;
	bra.uni 	BB0_212;

BB0_209:
	setp.neu.f32	%p164, %f361, 0f7F800000;
	@%p164 bra 	BB0_212;

	selp.f32	%f1399, 0fFF800000, 0f7F800000, %p4;

BB0_212:
	setp.eq.f32	%p165, %f345, 0f3F800000;
	selp.f32	%f1216, 0f3F800000, %f1399, %p165;
	cvt.sat.f32.f32	%f373, %f1216;
	abs.f32 	%f374, %f346;
	setp.lt.f32	%p166, %f374, 0f00800000;
	mul.f32 	%f1217, %f374, 0f4B800000;
	selp.f32	%f1218, 0fC3170000, 0fC2FE0000, %p166;
	selp.f32	%f1219, %f1217, %f374, %p166;
	mov.b32 	 %r679, %f1219;
	and.b32  	%r680, %r679, 8388607;
	or.b32  	%r681, %r680, 1065353216;
	mov.b32 	 %f1220, %r681;
	shr.u32 	%r682, %r679, 23;
	cvt.rn.f32.u32	%f1221, %r682;
	add.f32 	%f1222, %f1218, %f1221;
	setp.gt.f32	%p167, %f1220, 0f3FB504F3;
	mul.f32 	%f1223, %f1220, 0f3F000000;
	add.f32 	%f1224, %f1222, 0f3F800000;
	selp.f32	%f1225, %f1223, %f1220, %p167;
	selp.f32	%f1226, %f1224, %f1222, %p167;
	add.f32 	%f1227, %f1225, 0fBF800000;
	add.f32 	%f1215, %f1225, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1214,%f1215;
	// inline asm
	add.f32 	%f1228, %f1227, %f1227;
	mul.f32 	%f1229, %f1214, %f1228;
	mul.f32 	%f1230, %f1229, %f1229;
	fma.rn.f32 	%f1233, %f1074, %f1230, %f1073;
	fma.rn.f32 	%f1235, %f1233, %f1230, %f1076;
	mul.rn.f32 	%f1236, %f1235, %f1230;
	mul.rn.f32 	%f1237, %f1236, %f1229;
	sub.f32 	%f1238, %f1227, %f1229;
	neg.f32 	%f1239, %f1229;
	add.f32 	%f1240, %f1238, %f1238;
	fma.rn.f32 	%f1241, %f1239, %f1227, %f1240;
	mul.rn.f32 	%f1242, %f1214, %f1241;
	add.f32 	%f1243, %f1237, %f1229;
	sub.f32 	%f1244, %f1229, %f1243;
	add.f32 	%f1245, %f1237, %f1244;
	add.f32 	%f1246, %f1242, %f1245;
	add.f32 	%f1247, %f1243, %f1246;
	sub.f32 	%f1248, %f1243, %f1247;
	add.f32 	%f1249, %f1246, %f1248;
	mul.rn.f32 	%f1251, %f1226, %f1092;
	mul.rn.f32 	%f1253, %f1226, %f1094;
	add.f32 	%f1254, %f1251, %f1247;
	sub.f32 	%f1255, %f1251, %f1254;
	add.f32 	%f1256, %f1247, %f1255;
	add.f32 	%f1257, %f1249, %f1256;
	add.f32 	%f1258, %f1253, %f1257;
	add.f32 	%f1259, %f1254, %f1258;
	sub.f32 	%f1260, %f1254, %f1259;
	add.f32 	%f1261, %f1258, %f1260;
	mul.rn.f32 	%f1263, %f1104, %f1259;
	neg.f32 	%f1264, %f1263;
	fma.rn.f32 	%f1265, %f1104, %f1259, %f1264;
	fma.rn.f32 	%f1266, %f1104, %f1261, %f1265;
	fma.rn.f32 	%f1268, %f1109, %f1259, %f1266;
	add.rn.f32 	%f1269, %f1263, %f1268;
	neg.f32 	%f1270, %f1269;
	add.rn.f32 	%f1271, %f1263, %f1270;
	add.rn.f32 	%f1272, %f1271, %f1268;
	mov.b32 	 %r683, %f1269;
	setp.eq.s32	%p168, %r683, 1118925336;
	add.s32 	%r684, %r683, -1;
	mov.b32 	 %f1273, %r684;
	add.f32 	%f1274, %f1272, 0f37000000;
	selp.f32	%f1275, %f1273, %f1269, %p168;
	selp.f32	%f375, %f1274, %f1272, %p168;
	mul.f32 	%f1276, %f1275, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1277, %f1276;
	fma.rn.f32 	%f1279, %f1277, %f1120, %f1275;
	fma.rn.f32 	%f1281, %f1277, %f1122, %f1279;
	mul.f32 	%f1282, %f1281, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1283, %f1282;
	add.f32 	%f1284, %f1277, 0f00000000;
	ex2.approx.f32 	%f1285, %f1284;
	mul.f32 	%f1286, %f1283, %f1285;
	setp.lt.f32	%p169, %f1275, 0fC2D20000;
	selp.f32	%f1287, 0f00000000, %f1286, %p169;
	setp.gt.f32	%p170, %f1275, 0f42D20000;
	selp.f32	%f1400, 0f7F800000, %f1287, %p170;
	setp.eq.f32	%p171, %f1400, 0f7F800000;
	@%p171 bra 	BB0_214;

	fma.rn.f32 	%f1400, %f1400, %f375, %f1400;

BB0_214:
	setp.lt.f32	%p172, %f346, 0f00000000;
	and.pred  	%p5, %p172, %p141;
	mov.b32 	 %r685, %f1400;
	xor.b32  	%r686, %r685, -2147483648;
	mov.b32 	 %f1288, %r686;
	selp.f32	%f1402, %f1288, %f1400, %p5;
	setp.eq.f32	%p174, %f346, 0f00000000;
	@%p174 bra 	BB0_217;
	bra.uni 	BB0_215;

BB0_217:
	add.f32 	%f1291, %f346, %f346;
	selp.f32	%f1402, %f1291, 0f00000000, %p141;
	bra.uni 	BB0_218;

BB0_215:
	setp.geu.f32	%p175, %f346, 0f00000000;
	@%p175 bra 	BB0_218;

	cvt.rzi.f32.f32	%f1290, %f1104;
	setp.neu.f32	%p176, %f1290, 0f3EE8BA2E;
	selp.f32	%f1402, 0f7FFFFFFF, %f1402, %p176;

BB0_218:
	add.f32 	%f1292, %f374, 0f3EE8BA2E;
	mov.b32 	 %r687, %f1292;
	setp.lt.s32	%p178, %r687, 2139095040;
	@%p178 bra 	BB0_223;

	setp.gtu.f32	%p179, %f374, 0f7F800000;
	@%p179 bra 	BB0_222;
	bra.uni 	BB0_220;

BB0_222:
	add.f32 	%f1402, %f346, 0f3EE8BA2E;
	bra.uni 	BB0_223;

BB0_220:
	setp.neu.f32	%p180, %f374, 0f7F800000;
	@%p180 bra 	BB0_223;

	selp.f32	%f1402, 0fFF800000, 0f7F800000, %p5;

BB0_223:
	mov.u32 	%r701, 2;
	setp.eq.f32	%p181, %f346, 0f3F800000;
	selp.f32	%f1293, 0f3F800000, %f1402, %p181;
	cvt.sat.f32.f32	%f1294, %f1293;
	cvt.u64.u32	%rd221, %r215;
	mov.u64 	%rd224, colorOutput;
	cvta.global.u64 	%rd219, %rd224;
	mov.u32 	%r689, 4;
	// inline asm
	call (%rd218), _rt_buffer_get_64, (%rd219, %r701, %r689, %rd42, %rd221, %rd194, %rd194);
	// inline asm
	mul.f32 	%f1295, %f360, 0f437F0000;
	cvt.rzi.u32.f32	%r690, %f1295;
	mul.f32 	%f1296, %f373, 0f437F0000;
	cvt.rzi.u32.f32	%r691, %f1296;
	mul.f32 	%f1297, %f1294, 0f437F0000;
	cvt.rzi.u32.f32	%r692, %f1297;
	cvt.u16.u32	%rs7, %r692;
	cvt.u16.u32	%rs8, %r691;
	cvt.u16.u32	%rs9, %r690;
	mov.u16 	%rs10, 255;
	st.v4.u8 	[%rd218], {%rs9, %rs8, %rs7, %rs10};
	ret;
}


